{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "labelmanager:v1alpha1",
  "name": "labelmanager",
  "canonicalName": "Label Manager",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Label Manager API",
  "description": "The Label Manager API allows users to create and manage definitions and permissions of labels (keys and values) across the Cloud Resource Hierarchy. The API also allows binding these user-created labels to cloud resources to affect policy evaluation.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/resource-manager/",
  "protocol": "rest",
  "rootUrl": "https://labelmanager.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://labelmanager.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLabelBindingsResponse": {
      "id": "ListLabelBindingsResponse",
      "description": "The ListLabelBindings response.",
      "type": "object",
      "properties": {
        "bindings": {
          "description": "A possibly paginated list of LabelBindings for the specified LabelValue or\nresource.",
          "type": "array",
          "items": {
            "$ref": "LabelBinding"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelBindings`\nthat indicates from where listing should continue. This is currently not\nused, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelBinding": {
      "id": "LabelBinding",
      "description": "A LabelBinding represents a connection between a LabelValue and a cloud\nresource (currently Project, Folder, or Organization). Once a LabelBinding is\ncreated, the LabelValue is applied to all the descendents of the cloud\nresource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the LabelBinding. This is a String of the form:\n'labelBindings\/{id}' (e.g. 'labelBindings\/bGFiZWx8vY2xvdWz').",
          "type": "string"
        },
        "labelValue": {
          "description": "The LabelValue of the LabelBinding.\nMust be of the form \"labelValues\/456.",
          "type": "string"
        },
        "resource": {
          "description": "The full resource name of the resource the LabelValue is bound to.\nE.g. \/\/cloudresourcemanager.googleapis.com\/organizations\/123",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ListLabelKeysResponse": {
      "id": "ListLabelKeysResponse",
      "description": "The ListLabelKeys response message.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "List of LabelKeys that live under the specified parent in the request.",
          "type": "array",
          "items": {
            "$ref": "LabelKey"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelKeys`\nthat indicates from where listing should continue. This is currently not\nused, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelKey": {
      "id": "LabelKey",
      "description": "A LabelKey, used to group a set of LabelValues.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for LabelKey. Must be in the format labelKeys\/123.\n\nImmutable.",
          "type": "string"
        },
        "parent": {
          "description": "The resource name of the new LabelKey's parent.\nMust be of the form `organizations\/{org_id}`.\n\nImmutable.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. User-assigned display name for LabelKey. Display name should be\nunique for LabelKeys within the same parent resource.\n\nThe display name must be 1-63 characters, beginning and ending with\nan alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),\ndots (.), and alphanumerics between.\n\nRead-write.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User-assigned description of the LabelKey. Must not exceed 256 characters.\n\nRead-write.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is\nalways set in server responses. See UpdateLabelKeyRequest for details.",
          "type": "string"
        },
        "state": {
          "description": "Output only. LabelKey lifecycle state.",
          "enumDescriptions": [
            "Unspecified state.  This is only used\/useful for distinguishing\nunset values.",
            "The normal and active state.",
            "The LabelKey has been marked for deletion by the user\n(by invoking:\nDeleteLabelKey)\nor by the system (Google Cloud Platform).\n\nThis can generally be reversed by invoking:\n[google.labelmanager.v1alpha1.LabelManager.UndeleteLabelKey]"
          ],
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETE_REQUESTED"
          ]
        },
        "createTime": {
          "description": "Output only. Creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Deletion time. This field is cleared on undelete.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "UndeleteLabelKeyRequest": {
      "id": "UndeleteLabelKeyRequest",
      "description": "The request message for undeleting a LabelKey.",
      "type": "object",
      "properties": {
      }
    },
    "ListLabelValuesResponse": {
      "id": "ListLabelValuesResponse",
      "description": "The ListLabelValues response.",
      "type": "object",
      "properties": {
        "values": {
          "description": "A possibly paginated list of LabelValues that are direct descendants of\nthe specified parent LabelKey.",
          "type": "array",
          "items": {
            "$ref": "LabelValue"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelValues`\nthat indicates from where listing should continue. This is currently not\nused, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelValue": {
      "id": "LabelValue",
      "description": "A LabelValue is a child of a particular LabelKey. This is used to group\ncloud resources for the purpose of controlling them via policies.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for LabelValue in the format labelValues\/456.\n\nImmutable.",
          "type": "string"
        },
        "parent": {
          "description": "The resource name of the new LabelValue's parent LabelKey.\nMust be of the form `labelKeys\/{label_key_id}`.\n\nImmutable.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. User-assigned display name for LabelValue. Display name should be\nunique for LabelValues within the same parent LabelKey.\n\nThe display name must be 63 characters or less, beginning and ending with\nan alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),\ndots (.), and alphanumerics between.\n\nRead-write.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User-assigned description of the LabelValue.\nMust not exceed 256 characters.\n\nRead-write.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is\nalways set in server responses. See UpdateLabelValueRequest for details.",
          "type": "string"
        },
        "state": {
          "description": "Output only. LabelValue lifecycle state.",
          "enumDescriptions": [
            "Unspecified state.  This is only used\/useful for distinguishing\nunset values.",
            "The normal and active state.",
            "The LabelValue has been marked for deletion by the user\n(by invoking:\nDeleteLabelValue)\nor by the system (Google Cloud Platform).\n\nThis can generally be reversed by invoking:\n[google.labelmanager.v1alpha1.LabelManager.UndeleteLabelValue]"
          ],
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETE_REQUESTED"
          ]
        },
        "createTime": {
          "description": "Output only. Creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Deletion time. This value is cleared on undelete.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "UndeleteLabelValueRequest": {
      "id": "UndeleteLabelValueRequest",
      "description": "The request message for undeleting a LabelValue.",
      "type": "object",
      "properties": {
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "labelBindings": {
      "methods": {
        "list": {
          "id": "labelmanager.labelBindings.list",
          "path": "v1alpha1/labelBindings",
          "flatPath": "v1alpha1/labelBindings",
          "httpMethod": "GET",
          "parameters": {
            "filter": {
              "description": "Required. An expression for filtering the results of the request. The user must\nexpress one of the following filtering clauses:\n+ `labelValue`\n+ `resource`\n\nThe two cases of using filters are as follows:\n\n| Filter                                                         |\n|----------------------------------------------------------------|\n| 1) labelValue:labelValues\/123                                  |\n| 2) resource:\/\/cloudresourcemanager.googleapis.com\/projects\/123 |\n|________________________________________________________________|\n\nIn case 1), all LabelBindings bound to the LabelValue with ID '123' will\nbe retrieved.\n\nIn case 2), all LabelBindings bound to the Project with ID '123' will be\nretrieved.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelBindings to return in the response. This is\ncurrently not used by the server and will return the full page even if a\nsize is specified.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelBindings`\nthat indicates where this listing should continue from. This is currently\nnot used by the server.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelBindingsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists the LabelBindings for the given LabelValue or cloud resource\n(currently Project, Folder, or Organization) determined by the given\nfilter.\n\nList LabelBindings for LabelValue with id 123 will map to:\n\/v1alpha1\/labelBindings?filter=labelValue:labelValues\/123\nList LabelBindings for Project resource with id 456 will map to:\n\/v1alpha1\/labelBindings?filter=resource:\/\/cloudresourcemanager.googleapis.com\/projects\/456\nbecause the full resource name is required.\n\nFor additional details see:\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name."
        },
        "create": {
          "id": "labelmanager.labelBindings.create",
          "path": "v1alpha1/labelBindings",
          "flatPath": "v1alpha1/labelBindings",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelBinding"
          },
          "response": {
            "$ref": "LabelBinding"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a LabelBinding between a LabelValue and a cloud resource\n(currently Project, Folder, or Organization)."
        },
        "delete": {
          "id": "labelmanager.labelBindings.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelBindings/{labelBindingsId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Required. The name of the LabelBinding. This is a String of the form:\n'labelBindings\/{id}' (e.g. 'labelBindings\/bGFiZWx8vY2xvdWz').",
              "location": "path",
              "required": true,
              "pattern": "^labelBindings\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a LabelBinding."
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "id": "labelmanager.operations.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/operations/{operationsId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
        }
      }
    },
    "labelKeys": {
      "methods": {
        "list": {
          "id": "labelmanager.labelKeys.list",
          "path": "v1alpha1/labelKeys",
          "flatPath": "v1alpha1/labelKeys",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "The resource name of the new LabelKey's parent.\nMust be of the form `folders\/{folder_id}` or `organizations\/{org_id}`.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelKeys to return in the response.\nThis is currently not used by the server and will return the full page even\nif a size is specified currently.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelKey`\nthat indicates where this listing should continue from. This is currently\nnot used by the server.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelKeysResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists all LabelKeys for a parent resource."
        },
        "get": {
          "id": "labelmanager.labelKeys.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be fetched in the format labelKeys\/123.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "LabelKey"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves a LabelKey. This method will return PERMISSION_DENIED if the\nkey does not exist or the user does not have permission to view it."
        },
        "create": {
          "id": "labelmanager.labelKeys.create",
          "path": "v1alpha1/labelKeys",
          "flatPath": "v1alpha1/labelKeys",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelKey"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a new LabelKey. If another request with the same parameters is\nsent while the original request is in process, the second request\nwill receive an error. A maximum of 300 LabelKeys (with any lifecycle\nstate) can exist under a parent at any given time."
        },
        "patch": {
          "id": "labelmanager.labelKeys.patch",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey. Must be in the format labelKeys\/123.\n\nImmutable.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            },
            "updateMask": {
              "description": "Fields to be updated",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "LabelKey"
          },
          "response": {
            "$ref": "LabelKey"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the attributes of the LabelKey resource."
        },
        "delete": {
          "id": "labelmanager.labelKeys.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be deleted in the format labelKeys\/123.\nThe LabelKey cannot be a parent of any LabelValues in the active state\nto be deleted successfully.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Requests deletion of a LabelKey. The LabelKey is moved into the\nDELETE_REQUESTED state\nimmediately, and is deleted approximately 30 days later. The LabelKey\ncannot be deleted if it has any child LabelValues in the\nACTIVE state."
        },
        "undelete": {
          "id": "labelmanager.labelKeys.undelete",
          "path": "v1alpha1/{+name}:undelete",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:undelete",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be un-deleted in the format labelKeys\/123.\nThe parent of this LabelKey must be in the active state.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "UndeleteLabelKeyRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Cancels the deletion request for a LabelKey. This method may only be\ncalled on a LabelKey in the\nDELETE_REQUESTED state.\nIn order to succeed, the LabelKey's parent must be in the active state."
        },
        "setIamPolicy": {
          "id": "labelmanager.labelKeys.setIamPolicy",
          "path": "v1alpha1/{+resource}:setIamPolicy",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:setIamPolicy",
          "httpMethod": "POST",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED"
        },
        "getIamPolicy": {
          "id": "labelmanager.labelKeys.getIamPolicy",
          "path": "v1alpha1/{+resource}:getIamPolicy",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:getIamPolicy",
          "httpMethod": "GET",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            },
            "options.requestedPolicyVersion": {
              "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
        },
        "testIamPermissions": {
          "id": "labelmanager.labelKeys.testIamPermissions",
          "path": "v1alpha1/{+resource}:testIamPermissions",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:testIamPermissions",
          "httpMethod": "POST",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
        }
      }
    },
    "labelValues": {
      "methods": {
        "list": {
          "id": "labelmanager.labelValues.list",
          "path": "v1alpha1/labelValues",
          "flatPath": "v1alpha1/labelValues",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Resource name for LabelKey, parent of the LabelValues to be listed,\nin the format labelKeys\/123.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelValues to return in the response.\nThis is currently not used by the server and will return the full page even\nif a size is specified currently.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelValues`\nthat indicates where this listing should continue from. This is currently\nnot used by the server.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelValuesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists all LabelValues for a specific LabelKey."
        },
        "get": {
          "id": "labelmanager.labelValues.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be fetched in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "LabelValue"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves LabelValue. This method will return PERMISSION_DENIED if the\nLabelValue does not exist or the user does not have permission to view it."
        },
        "create": {
          "id": "labelmanager.labelValues.create",
          "path": "v1alpha1/labelValues",
          "flatPath": "v1alpha1/labelValues",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelValue"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a LabelValue as a child of the specified LabelKey. If a another\nrequest with the same parameters is sent while the original request is in\nprocess the second request will receive an error. A maximum of 300\nLabelValues (with any lifecycle state) can exist under a LabelKey at any\ngiven time."
        },
        "patch": {
          "id": "labelmanager.labelValues.patch",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue in the format labelValues\/456.\n\nImmutable.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            },
            "updateMask": {
              "description": "Fields to be updated.",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "LabelValue"
          },
          "response": {
            "$ref": "LabelValue"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the attributes of the LabelValue resource."
        },
        "delete": {
          "id": "labelmanager.labelValues.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be deleted in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Requests deletion of a LabelValue. The LabelValue is moved into the\nDELETE_REQUESTED state\nimmediately, and is deleted approximately 30 days later. The LabelValue\ncannot have any bindings when it is deleted."
        },
        "undelete": {
          "id": "labelmanager.labelValues.undelete",
          "path": "v1alpha1/{+name}:undelete",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}:undelete",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be un-deleted in the format\nlabelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "UndeleteLabelValueRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Cancels the deletion request for a LabelValue. This method may only be\ncalled on a LabelValue in the\nDELETE_REQUESTED state.\nIn order to succeed, the LabelValue's parent must be in the\nACTIVE state."
        }
      }
    }
  },
  "basePath": ""
}