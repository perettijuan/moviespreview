{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "gameservices:v1alpha",
  "name": "gameservices",
  "version": "v1alpha",
  "revision": "0",
  "title": "Cloud Game Services API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/solutions/gaming/",
  "protocol": "rest",
  "rootUrl": "https://gameservices.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://gameservices.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListAllocationPoliciesResponse": {
      "id": "ListAllocationPoliciesResponse",
      "description": "Response message for AllocationPoliciesService.ListAllocationPolicies.",
      "type": "object",
      "properties": {
        "allocationPolicies": {
          "description": "The list of allocation policies.",
          "type": "array",
          "items": {
            "$ref": "AllocationPolicy"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "List of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllocationPolicy": {
      "id": "AllocationPolicy",
      "description": "An allocation policy resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the allocation policy, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/allocationPolicies\/{allocation_policy_id}`.\nFor example,\n`projects\/my-project\/locations\/{location}\/allocationPolicies\/my-policy`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with the allocation policy. Each label is a key-value\npair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "priority": {
          "description": "Required. The priority of the policy for allocation. A smaller value\nindicates a higher priority.",
          "type": "integer",
          "format": "int32"
        },
        "weight": {
          "description": "The relative weight of the policy based on its priority - If there are\nmultiple policies with the same priority, the probability of using a policy\nis based on its weight.",
          "type": "integer",
          "format": "int32"
        },
        "clusterSelectors": {
          "description": "The cluster labels are used to identify the clusters that a policy is\napplied to.",
          "type": "array",
          "items": {
            "$ref": "LabelSelector"
          }
        },
        "schedules": {
          "description": "The event schedules - If specified, the policy is time based and when the\nschedule is effective overrides the default policy.",
          "type": "array",
          "items": {
            "$ref": "Schedule"
          }
        }
      }
    },
    "LabelSelector": {
      "id": "LabelSelector",
      "description": "The label selector, used to group labels on the resources.",
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Schedule": {
      "id": "Schedule",
      "description": "The schedule of an event - the event can be recurring or one time.  The\nevent's time span is specified by start_time and end_time. If the scheduled\nevent's timespan is larger than the cron_spec + cron_job_duration the event\nwill be recurring.\nIf cron_spec + cron_job_duration is only specified, the event is effective\nstarting at the local time specified by cron_spec and is recurrent.\n\n  start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time\n  cron job: cron spec start time + duration",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "The start time of the event.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end time of the event.",
          "type": "string",
          "format": "google-datetime"
        },
        "cronJobDuration": {
          "description": "The duration for the cron job event. The duration of the event is effective\nafter the cron job's start time.",
          "type": "string",
          "format": "google-duration"
        },
        "cronSpec": {
          "description": "The cron definition of the scheduled event. See\nhttps:\/\/en.wikipedia.org\/wiki\/Cron. Cron spec specifies the local time as\ndefined by the realm.",
          "type": "string"
        }
      }
    },
    "ListGameServerClustersResponse": {
      "id": "ListGameServerClustersResponse",
      "description": "Response message for GameServerClustersService.ListGameServerClusters.",
      "type": "object",
      "properties": {
        "gameServerClusters": {
          "description": "The list of game server clusters.",
          "type": "array",
          "items": {
            "$ref": "GameServerCluster"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "List of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GameServerCluster": {
      "id": "GameServerCluster",
      "description": "A game server cluster resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The resource name of the game server cluster, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}\/gameServerClusters\/{cluster_id}`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/realms\/zanzibar\/gameServerClusters\/my-onprem-cluster`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this game server cluster. Each label is a\nkey-value pair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "connectionInfo": {
          "description": "Game server cluster connection information. This information is used to\nmanage game server clusters.",
          "$ref": "GameServerClusterConnectionInfo"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        }
      }
    },
    "GameServerClusterConnectionInfo": {
      "id": "GameServerClusterConnectionInfo",
      "description": "Game server cluster connection information.",
      "type": "object",
      "properties": {
        "gkeClusterReference": {
          "description": "Reference of the GKE cluster where the game servers are installed.",
          "$ref": "GkeClusterReference"
        },
        "namespace": {
          "description": "Namespace designated on the game server cluster where the game server\ninstances will be created. The namespace existence will be validated\nduring creation.",
          "type": "string"
        }
      }
    },
    "GkeClusterReference": {
      "id": "GkeClusterReference",
      "description": "GkeClusterReference represents a reference of a GKE cluster.",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "The full or partial name of a GKE cluster, using one of the following\nforms:\n<ul>\n   <li>`projects\/{project_id}\/locations\/{location}\/clusters\/{cluster_id}`\n   <\/li>\n   <li>`locations\/{location}\/clusters\/{cluster_id}`<\/li>\n   <li>`{cluster_id}`<\/li>\n<\/ul>\nIf project and location are not specified, the project and location of the\nGameServerCluster resource are used to generate the full name of the\nGKE cluster.",
          "type": "string"
        }
      }
    },
    "PreviewCreateGameServerClusterResponse": {
      "id": "PreviewCreateGameServerClusterResponse",
      "description": "Response message for\nGameServerClustersService.PreviewCreateGameServerCluster.",
      "type": "object",
      "properties": {
        "deployedState": {
          "description": "The deployed state.",
          "$ref": "DeployedState"
        },
        "etag": {
          "description": "The ETag of the game server cluster.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      }
    },
    "DeployedState": {
      "id": "DeployedState",
      "description": "Encapsulates the expected deployed state.",
      "type": "object",
      "properties": {
        "fleets": {
          "description": "Details about fleets.",
          "type": "array",
          "items": {
            "$ref": "FleetDetails"
          }
        }
      }
    },
    "FleetDetails": {
      "id": "FleetDetails",
      "description": "Details about the Agones fleet.",
      "type": "object",
      "properties": {
        "gameServerClusterName": {
          "description": "The cluster name.",
          "type": "string"
        },
        "fleetName": {
          "description": "The name of the Agones game server fleet.",
          "type": "string"
        },
        "gameServerConfigName": {
          "description": "The name of the game server config object whose fleet spec\nis used to create the fleet.",
          "type": "string"
        },
        "autoscalerDetails": {
          "description": "Details about the agones autoscaler.",
          "$ref": "AutoscalerDetails"
        }
      }
    },
    "AutoscalerDetails": {
      "id": "AutoscalerDetails",
      "type": "object",
      "properties": {
        "autoscalerName": {
          "description": "The name of the Agones autoscaler.",
          "type": "string"
        },
        "scalingConfigName": {
          "description": "The name of the scaling config (within the game server config) that is\nused to create the autoscalar.",
          "type": "string"
        }
      }
    },
    "TargetState": {
      "id": "TargetState",
      "description": "Encapsulates the Target state.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Details about fleets.",
          "type": "array",
          "items": {
            "$ref": "TargetDetails"
          }
        }
      }
    },
    "TargetDetails": {
      "id": "TargetDetails",
      "description": "Details about the Agones resources.",
      "type": "object",
      "properties": {
        "gameServerClusterName": {
          "description": "The game server cluster name. It is of the form\n\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm-id}\/gameServerClusters\/{cluster_id}`",
          "type": "string"
        },
        "gameServerDeploymentName": {
          "description": "The game server deployment name. It is of the form\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
          "type": "string"
        },
        "fleetDetails": {
          "type": "array",
          "items": {
            "$ref": "TargetFleetDetails"
          }
        }
      }
    },
    "TargetFleetDetails": {
      "id": "TargetFleetDetails",
      "type": "object",
      "properties": {
        "fleet": {
          "$ref": "TargetFleet"
        },
        "autoscaler": {
          "$ref": "TargetFleetAutoscaler"
        }
      }
    },
    "TargetFleet": {
      "id": "TargetFleet",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Agones game server fleet.",
          "type": "string"
        },
        "specSource": {
          "description": "Encapsulates the source of the fleet spec.\nThe fleet spec source.",
          "$ref": "SpecSource"
        }
      }
    },
    "SpecSource": {
      "id": "SpecSource",
      "description": "Encapsulates fleet spec and autoscaler spec sources.",
      "type": "object",
      "properties": {
        "gameServerConfigName": {
          "description": "The game server config resource. It is of the form\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/configs\/{config_id}`",
          "type": "string"
        },
        "name": {
          "description": "The name of the fleet config or scaling config that is used to derive\nthe fleet or fleet autoscaler spec.",
          "type": "string"
        }
      }
    },
    "TargetFleetAutoscaler": {
      "id": "TargetFleetAutoscaler",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Agones autoscaler.",
          "type": "string"
        },
        "specSource": {
          "description": "Encapsulates the source of the fleet spec.\nDetails about the agones autoscaler spec.",
          "$ref": "SpecSource"
        }
      }
    },
    "PreviewDeleteGameServerClusterResponse": {
      "id": "PreviewDeleteGameServerClusterResponse",
      "description": "Response message for\nGameServerClustersService.PreviewDeleteGameServerCluster.",
      "type": "object",
      "properties": {
        "deployedState": {
          "description": "The deployed state.",
          "$ref": "DeployedState"
        },
        "etag": {
          "description": "The ETag of the game server cluster.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      }
    },
    "PreviewUpdateGameServerClusterResponse": {
      "id": "PreviewUpdateGameServerClusterResponse",
      "description": "Response message for GameServerClustersService.PreviewUpdateGameServerCluster",
      "type": "object",
      "properties": {
        "deployedState": {
          "description": "The deployed state.",
          "$ref": "DeployedState"
        },
        "etag": {
          "description": "The ETag of the game server cluster.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      }
    },
    "ListGameServerConfigsResponse": {
      "id": "ListGameServerConfigsResponse",
      "description": "Response message for\nGameServerConfigsService.ListGameServerConfigs.",
      "type": "object",
      "properties": {
        "gameServerConfigs": {
          "description": "The list of game server configs.",
          "type": "array",
          "items": {
            "$ref": "GameServerConfig"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "List of locations that were not reachable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GameServerConfig": {
      "id": "GameServerConfig",
      "description": "A game server config resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the game server config, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/configs\/{config_id}`.\nFor example,\n\n`projects\/my-project\/locations\/global\/gameServerDeployments\/my-game\/configs\/my-config`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this game server config. Each label is a\nkey-value pair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fleetConfigs": {
          "description": "The fleet specs contains list of fleet specs. In the Single Cloud, there\nwill be only one.",
          "type": "array",
          "items": {
            "$ref": "FleetConfig"
          }
        },
        "scalingConfigs": {
          "description": "Optional. This contains the autoscaling settings.",
          "type": "array",
          "items": {
            "$ref": "ScalingConfig"
          }
        },
        "description": {
          "description": "The description of the game server config.",
          "type": "string"
        }
      }
    },
    "FleetConfig": {
      "id": "FleetConfig",
      "description": "A fleet config resource.",
      "type": "object",
      "properties": {
        "fleetSpec": {
          "description": "The fleet spec, which is sent to Agones to configure fleet.\nExample spec can be found :\n`https:\/\/agones.dev\/site\/docs\/reference\/fleet\/`.",
          "type": "string"
        },
        "name": {
          "description": "The name of the FleetConfig.",
          "type": "string"
        }
      }
    },
    "ScalingConfig": {
      "id": "ScalingConfig",
      "description": "A scaling config resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the ScalingConfig",
          "type": "string"
        },
        "fleetAutoscalerSpec": {
          "description": "Required. Fleet autoscaler spec, which is sent to Agones.\nExample spec can be found :\nhttps:\/\/agones.dev\/site\/docs\/reference\/fleetautoscaler\/",
          "type": "string"
        },
        "priority": {
          "description": "Required. The priority of the scaling config. A smaller value indicates a higher\npriority.",
          "type": "integer",
          "format": "int32"
        },
        "selectors": {
          "description": "Labels used to identify the clusters to which this scaling config\napplies. A cluster is subject to this scaling config if its labels match\nany of the selector entries.",
          "type": "array",
          "items": {
            "$ref": "LabelSelector"
          }
        },
        "schedules": {
          "description": "The schedules to which this scaling config applies.",
          "type": "array",
          "items": {
            "$ref": "Schedule"
          }
        }
      }
    },
    "ListGameServerDeploymentsResponse": {
      "id": "ListGameServerDeploymentsResponse",
      "description": "Response message for GameServerDeploymentsService.ListGameServerDeployments.",
      "type": "object",
      "properties": {
        "gameServerDeployments": {
          "description": "The list of game server delpoyments.",
          "type": "array",
          "items": {
            "$ref": "GameServerDeployment"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "List of locations that were not reachable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GameServerDeployment": {
      "id": "GameServerDeployment",
      "description": "A game server deployment resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the game server deployment, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this game server deployment. Each label is a\nkey-value pair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stableGameServerTemplate": {
          "description": "Output only. The GameServerTemplate whose rollout was completed.",
          "$ref": "GameServerTemplate"
        },
        "newGameServerTemplate": {
          "description": "The GameServerTemplate whose rollout is ongoing.",
          "$ref": "GameServerTemplate"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        }
      }
    },
    "GameServerTemplate": {
      "id": "GameServerTemplate",
      "description": "The game server spec sent to Agones and the rollout target.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the game server template.",
          "type": "string"
        },
        "spec": {
          "description": "The game server spec, which is sent to Agones.",
          "type": "string"
        },
        "clusterPercentageSelectors": {
          "description": "Output only. The percentage of game servers running this game server\ntemplate in the selected clusters.",
          "type": "array",
          "items": {
            "$ref": "ClusterPercentageSelector"
          }
        },
        "templateId": {
          "description": "The ID of the game server template, specified by the user.",
          "type": "string"
        }
      }
    },
    "ClusterPercentageSelector": {
      "id": "ClusterPercentageSelector",
      "description": "The percentage of game servers running this game server template in the\nselected clusters.",
      "type": "object",
      "properties": {
        "clusterSelector": {
          "description": "Labels used to identify the clusters to which this game server template\napplies.",
          "$ref": "LabelSelector"
        },
        "percent": {
          "description": "The percentage of game servers running this game server depolyment. The\npercentage is applied to game server clusters which contain all of the\nlabels in the cluster selector field.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GameServerDeploymentRollout": {
      "id": "GameServerDeploymentRollout",
      "description": "This represents the rollout state. This is part of the  game server\ndeployment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the game server deployment rollout, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/rollout`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment\/rollout`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "defaultGameServerConfig": {
          "description": "The default game server config points to the game server config  that is\napplied everywhere realm\/cluster. For example,\n\n`projects\/my-project\/locations\/global\/gameServerDeployments\/my-game\/configs\/my-config`.",
          "type": "string"
        },
        "gameServerConfigOverrides": {
          "description": "The game_server_config_overrides contains the per game server config\noverrides. The overrides are processed in the order they are listed. As\nsoon as a match is found for cluster, the rest of the list is not\nprocessed.",
          "type": "array",
          "items": {
            "$ref": "GameServerConfigOverride"
          }
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        }
      }
    },
    "GameServerConfigOverride": {
      "id": "GameServerConfigOverride",
      "description": "A game server config override resource. This contains selector which cluster\nit is applied and the setting which specifies the version.",
      "type": "object",
      "properties": {
        "realmsSelector": {
          "$ref": "RealmSelector"
        },
        "configVersion": {
          "type": "string"
        }
      }
    },
    "RealmSelector": {
      "id": "RealmSelector",
      "description": "The realm selector, used to match realm resources.",
      "type": "object",
      "properties": {
        "realms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PreviewGameServerDeploymentRolloutResponse": {
      "id": "PreviewGameServerDeploymentRolloutResponse",
      "description": "Response message for PreviewGameServerDeploymentRollout.\nThis has details about the fleet and the autoscaler.",
      "type": "object",
      "properties": {
        "deployedState": {
          "description": "The deployed state.",
          "$ref": "DeployedState"
        },
        "unavailable": {
          "description": "Locations that could not be reached on this request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "etag": {
          "description": "ETag of the game server deployment.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      }
    },
    "FetchDeploymentStateRequest": {
      "id": "FetchDeploymentStateRequest",
      "description": "Request message for GameServerDeploymentsService.FetchDeploymentState.",
      "type": "object",
      "properties": {
      }
    },
    "FetchDeploymentStateResponse": {
      "id": "FetchDeploymentStateResponse",
      "description": "Response message for GameServerDeploymentsService.FetchDeploymentState.",
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of a deployment in a given location.",
          "type": "array",
          "items": {
            "$ref": "DeployedFleetDetails"
          }
        },
        "unavailable": {
          "description": "List of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeployedFleetDetails": {
      "id": "DeployedFleetDetails",
      "type": "object",
      "properties": {
        "fleet": {
          "description": "Information about the agones fleet.",
          "$ref": "Fleet"
        },
        "autoscaler": {
          "description": "Information about the agones autoscaler for that fleet.",
          "$ref": "FleetAutoscaler"
        }
      }
    },
    "Fleet": {
      "id": "Fleet",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Agones game server fleet.",
          "type": "string"
        },
        "agonesSpec": {
          "description": "The Agones fleet spec.\nThis is sent because it is possible that we may no longer have the\ncorresponding game server config in our systems.",
          "type": "string"
        },
        "cluster": {
          "description": "The cluster name.",
          "type": "string"
        },
        "specSource": {
          "description": "The source spec that is used to create the fleet.\nThe game server config and fleet config may no longer\nexist in the system.",
          "$ref": "SpecSource"
        },
        "status": {
          "description": "The current status of the fleet.\nIncludes count of game servers in various states.",
          "$ref": "FleetStatus"
        }
      }
    },
    "FleetStatus": {
      "id": "FleetStatus",
      "description": "FleetStatus has details about the fleets like how many are running,\nhow many allocated and so on.",
      "type": "object",
      "properties": {
        "availableCount": {
          "description": "The number of available servers.\nThe are no players connected to this servers.",
          "type": "string",
          "format": "int64"
        },
        "allocatedCount": {
          "description": "The number of allocated servers.\nThese are servers allocated to game sessions.",
          "type": "string",
          "format": "int64"
        },
        "reservedCount": {
          "description": "The number of reserved servers.\nReserved instances won't be deleted on scale down, but won't cause\nan autoscaler to scale up.",
          "type": "string",
          "format": "int64"
        },
        "replicaCount": {
          "description": "The total number of current GameServer replicas.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "FleetAutoscaler": {
      "id": "FleetAutoscaler",
      "description": "Details about the autoscaler.",
      "type": "object",
      "properties": {
        "autoscalerName": {
          "description": "The name of the Agones autoscaler.",
          "type": "string"
        },
        "specSource": {
          "description": "The source spec that is used to create the autoscaler.\nThe game server config and scaling config may no longer\nexist in the system.",
          "$ref": "SpecSource"
        },
        "fleetAutoscalerSpec": {
          "description": "The autoscaler spec.\nThis is sent because it is possible that we may no longer have the\ncorresponding game server config in our systems.",
          "type": "string"
        }
      }
    },
    "StartRolloutRequest": {
      "id": "StartRolloutRequest",
      "description": "Request message for GameServerDeploymentsService.StartRollout.",
      "type": "object",
      "properties": {
        "newGameServerTemplate": {
          "description": "Required. The game server template for the new rollout.",
          "$ref": "GameServerTemplate"
        }
      }
    },
    "SetRolloutTargetRequest": {
      "id": "SetRolloutTargetRequest",
      "description": "Request message for GameServerDeploymentsService.SetRolloutTarget.",
      "type": "object",
      "properties": {
        "clusterPercentageSelector": {
          "description": "Required. The percentage of game servers that should run the new game\nserver template in the specified clusters. Default is 0.",
          "type": "array",
          "items": {
            "$ref": "ClusterPercentageSelector"
          }
        }
      }
    },
    "CommitRolloutRequest": {
      "id": "CommitRolloutRequest",
      "description": "Request message for GameServerDeploymentsService.CommitRollout.",
      "type": "object",
      "properties": {
      }
    },
    "RevertRolloutRequest": {
      "id": "RevertRolloutRequest",
      "description": "Request message for GameServerDeploymentsService.RevertRollout.",
      "type": "object",
      "properties": {
      }
    },
    "ListRealmsResponse": {
      "id": "ListRealmsResponse",
      "description": "Response message for RealmsService.ListRealms.",
      "type": "object",
      "properties": {
        "realms": {
          "description": "The list of realms",
          "type": "array",
          "items": {
            "$ref": "Realm"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        }
      }
    },
    "Realm": {
      "id": "Realm",
      "description": "A Realm resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the realm, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}`. For\nexample, `projects\/my-project\/locations\/{location}\/realms\/my-realm`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this realm. Each label is a key-value pair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timeZone": {
          "description": "Time zone where all realm-specific policies are evaluated. The value of\nthis field must be from the IANA time zone database:\nhttps:\/\/www.iana.org\/time-zones. If not specified, UTC is assumed by\ndefault.",
          "type": "string"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        }
      }
    },
    "PreviewRealmUpdateResponse": {
      "id": "PreviewRealmUpdateResponse",
      "description": "Response message for RealmsService.PreviewRealmUpdate.",
      "type": "object",
      "properties": {
        "deployedState": {
          "description": "The deployment state.",
          "$ref": "DeployedState"
        },
        "etag": {
          "description": "ETag of the realm.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      }
    },
    "ListScalingPoliciesResponse": {
      "id": "ListScalingPoliciesResponse",
      "description": "Response message for ScalingPoliciesService.ListScalingPolicies.",
      "type": "object",
      "properties": {
        "scalingPolicies": {
          "description": "The list of scaling policies.",
          "type": "array",
          "items": {
            "$ref": "ScalingPolicy"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "List of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScalingPolicy": {
      "id": "ScalingPolicy",
      "description": "A scaling policy resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the scaling policy, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/scalingPolicies\/{scaling_policy_id}`.\nFor example,\n`projects\/my-project\/locations\/{location}\/scalingPolicies\/my-policy`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels associated with this scaling policy. Each label is a key-value\npair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fleetAutoscalerSettings": {
          "description": "Fleet autoscaler parameters.",
          "$ref": "FleetAutoscalerSettings"
        },
        "priority": {
          "description": "Required. The priority of the policy. A smaller value indicates a higher\npriority.",
          "type": "integer",
          "format": "int32"
        },
        "clusterSelectors": {
          "description": "Labels used to identify the clusters to which this scaling policy applies.\nA cluster is subject to this scaling policy if its labels match any of the\ncluster selector entries.",
          "type": "array",
          "items": {
            "$ref": "LabelSelector"
          }
        },
        "schedules": {
          "description": "The schedules to which this scaling policy applies.",
          "type": "array",
          "items": {
            "$ref": "Schedule"
          }
        },
        "gameServerDeployment": {
          "description": "The game server deployment for this scaling policy. For example,\n\n\"projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment\".",
          "type": "string"
        }
      }
    },
    "FleetAutoscalerSettings": {
      "id": "FleetAutoscalerSettings",
      "description": "Fleet autoscaling parameters.",
      "type": "object",
      "properties": {
        "bufferSizeAbsolute": {
          "description": "The size of a buffer of ready game server instances in absolute number.\nAs game server instances get allocated or terminated, the fleet will be\nscaled up and down so that this buffer is maintained.",
          "type": "string",
          "format": "int64"
        },
        "bufferSizePercentage": {
          "description": "The size of a buffer of ready game server instances in percentage. Value\nmust be in range [1, 99]. As game server instances get allocated or\nterminated, the fleet will be scaled up and down so that this buffer is\nmaintained.",
          "type": "integer",
          "format": "int32"
        },
        "minReplicas": {
          "description": "The minimum fleet size.",
          "type": "string",
          "format": "int64"
        },
        "maxReplicas": {
          "description": "The maximum fleet size.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {
          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example,`alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go\/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN\nor DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from\nsecurity.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not\npermitted to grant access based on the *absence* of a justification, so\njustification conditions can only be used in a \"positive\" context\n(e.g., ALLOW\/IN or DENY\/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nSupported field names:\n   - \"authority\", which is \"[token]\" if IAMContext.token is present,\n     otherwise the value of IAMContext.authority_selector if present, and\n     otherwise a representation of IAMContext.principal; or\n   - \"iam_principal\", a representation of IAMContext.principal even if a\n     token or authority selector is present; or\n   - \"\" (empty string), resulting in a counter with no fields.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}\n",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields.\nThese can be used to create a counter with arbitrary field\/value\npairs.\nSee: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the\nCounterOptions.field, the value here is a constant that is not\nderived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "description": "Whether Gin logging should happen in a fail-closed manner at the caller.\nThis is relevant only in the LocalIAM implementation, for now.",
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "type": "string",
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation\nof the operation. Operations that have successfully been cancelled\nhave Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "gameservices.projects.locations.list",
              "path": "v1alpha/{+name}/locations",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet\nrevealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "gameservices.projects.locations.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "gameservices.projects.locations.operations.list",
                  "path": "v1alpha/{+name}/operations",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`. To\noverride the binding, API services can add a binding such as\n`\"\/v1\/{name=users\/*}\/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "gameservices.projects.locations.operations.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
                },
                "delete": {
                  "id": "gameservices.projects.locations.operations.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "gameservices.projects.locations.operations.cancel",
                  "path": "v1alpha/{+name}:cancel",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."
                }
              }
            },
            "allocationPolicies": {
              "methods": {
                "list": {
                  "id": "gameservices.projects.locations.allocationPolicies.list",
                  "path": "v1alpha/{+parent}/allocationPolicies",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/allocationPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more AllocationPolicies left to be queried.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAllocationPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List allocation policies in a given project and location."
                },
                "get": {
                  "id": "gameservices.projects.locations.allocationPolicies.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/allocationPolicies/{allocationPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the allocation policy to retrieve, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/allocationPolicies\/{allocation_policy_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/allocationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AllocationPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single allocation policy."
                },
                "create": {
                  "id": "gameservices.projects.locations.allocationPolicies.create",
                  "path": "v1alpha/{+parent}/allocationPolicies",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/allocationPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "allocationPolicyId": {
                      "description": "Required. The ID of the allocation policy resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AllocationPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new allocation policy in a given project and location."
                },
                "delete": {
                  "id": "gameservices.projects.locations.allocationPolicies.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/allocationPolicies/{allocationPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the allocation policy to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/allocationPolicies\/{allocation_policy_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/allocationPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single allocation policy."
                },
                "patch": {
                  "id": "gameservices.projects.locations.allocationPolicies.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/allocationPolicies/{allocationPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the allocation policy, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/allocationPolicies\/{allocation_policy_id}`.\nFor example,\n`projects\/my-project\/locations\/{location}\/allocationPolicies\/my-policy`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/allocationPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "AllocationPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a single allocation policy."
                }
              }
            },
            "gameServerDeployments": {
              "methods": {
                "list": {
                  "id": "gameservices.projects.locations.gameServerDeployments.list",
                  "path": "v1alpha/{+parent}/gameServerDeployments",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more GameServerDeployments left to be queried.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGameServerDeploymentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists game server deployments in a given project and location."
                },
                "get": {
                  "id": "gameservices.projects.locations.gameServerDeployments.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment to retrieve, using the\nform:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GameServerDeployment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single game server deployment."
                },
                "create": {
                  "id": "gameservices.projects.locations.gameServerDeployments.create",
                  "path": "v1alpha/{+parent}/gameServerDeployments",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "deploymentId": {
                      "description": "Required. The ID of the game server deployment resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GameServerDeployment"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new game server deployment in a given project and location."
                },
                "delete": {
                  "id": "gameservices.projects.locations.gameServerDeployments.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single game server deployment."
                },
                "patch": {
                  "id": "gameservices.projects.locations.gameServerDeployments.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the game server deployment, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GameServerDeployment"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a game server deployment."
                },
                "getRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.getRollout",
                  "path": "v1alpha/{+name}/rollout",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment to retrieve, using the\nform:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/rollout`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a rollout of a single game server deployment."
                },
                "updateRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.updateRollout",
                  "path": "v1alpha/{+name}/rollout",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the game server deployment rollout, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/rollout`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment\/rollout`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches the rollout of game server deployment."
                },
                "previewRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.previewRollout",
                  "path": "v1alpha/{+name}/rollout:preview",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout:preview",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the game server deployment rollout, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/rollout`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/gameServerDeployments\/my-deployment\/rollout`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "previewTime": {
                      "description": "Optional. The instant of time at which the preview needs to be computed. If\nunspecified, defaults to the time after the suggested rollout finishes.",
                      "location": "query",
                      "type": "string",
                      "format": "google-datetime"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "response": {
                    "$ref": "PreviewGameServerDeploymentRolloutResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Previews the rollout of game server deployment. This API does not\nmutate the rollout resource."
                },
                "fetchDeploymentState": {
                  "id": "gameservices.projects.locations.gameServerDeployments.fetchDeploymentState",
                  "path": "v1alpha/{+name}:fetchDeploymentState",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:fetchDeploymentState",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "FetchDeploymentStateRequest"
                  },
                  "response": {
                    "$ref": "FetchDeploymentStateResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves information about the current state of the deployment, e.g. it\ngathers all the fleets and autoscalars for this deployment.\nThis includes fleets running older version of the deployment."
                },
                "startRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.startRollout",
                  "path": "v1alpha/{+name}:startRollout",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:startRollout",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment, using the\nform:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartRolloutRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts rollout of this game server deployment based on the given game\nserver template."
                },
                "setRolloutTarget": {
                  "id": "gameservices.projects.locations.gameServerDeployments.setRolloutTarget",
                  "path": "v1alpha/{+name}:setRolloutTarget",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:setRolloutTarget",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SetRolloutTargetRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets rollout target for the ongoing game server deployment rollout in the\nspecified clusters and based on the given rollout percentage. Default is 0."
                },
                "commitRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.commitRollout",
                  "path": "v1alpha/{+name}:commitRollout",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:commitRollout",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment, using the\nform:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CommitRolloutRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Commits the ongoing game server deployment rollout by setting the rollout\npercentage to 100 in all clusters whose labels match labels in the game\nserver template."
                },
                "revertRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.revertRollout",
                  "path": "v1alpha/{+name}:revertRollout",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:revertRollout",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server deployment to deploy, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RevertRolloutRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rolls back the ongoing game server deployment rollout by setting the\nrollout percentage to 0 in all clusters whose labels match labels in the\ngame server template."
                },
                "setIamPolicy": {
                  "id": "gameservices.projects.locations.gameServerDeployments.setIamPolicy",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED"
                },
                "getIamPolicy": {
                  "id": "gameservices.projects.locations.gameServerDeployments.getIamPolicy",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "gameservices.projects.locations.gameServerDeployments.testIamPermissions",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
              ,
              "resources": {
                "configs": {
                  "methods": {
                    "list": {
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.list",
                      "path": "v1alpha/{+parent}/configs",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource name, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/configs\/*`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more GameServerConfigs left to be queried.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter to apply to list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListGameServerConfigsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists game server configs in a given project, location, and game server\ndeployment."
                    },
                    "get": {
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.get",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server config to retrieve, using the\nform:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/configs\/{config_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+\/configs\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GameServerConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single game server config."
                    },
                    "create": {
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.create",
                      "path": "v1alpha/{+parent}/configs",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource name, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+$",
                          "type": "string"
                        },
                        "configId": {
                          "description": "Required. The ID of the game server config resource to be created.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GameServerConfig"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new game server config in a given project, location, and game\nserver deployment. Game server configs are immutable. A game server config,\nis not applied until it is rolled out. The rollout is managed\nby updating the game server rollout resource."
                    },
                    "delete": {
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.delete",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server config to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerDeployments\/{deployment_id}\/configs\/{config_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gameServerDeployments\/[^\/]+\/configs\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single game server config. If a game server config referenced in\ngame server rollout, the deletion will fail since it will be in use."
                    }
                  }
                }
              }
            },
            "realms": {
              "methods": {
                "list": {
                  "id": "gameservices.projects.locations.realms.list",
                  "path": "v1alpha/{+parent}/realms",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more Realms left to be queried.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRealmsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists realms in a given project and location."
                },
                "get": {
                  "id": "gameservices.projects.locations.realms.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the realm to retrieve, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Realm"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single realm."
                },
                "create": {
                  "id": "gameservices.projects.locations.realms.create",
                  "path": "v1alpha/{+parent}/realms",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "realmId": {
                      "description": "Required. The ID of the realm resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Realm"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Realm in a given project and location."
                },
                "delete": {
                  "id": "gameservices.projects.locations.realms.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the realm to delete, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single realm."
                },
                "patch": {
                  "id": "gameservices.projects.locations.realms.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the realm, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}`. For\nexample, `projects\/my-project\/locations\/{location}\/realms\/my-realm`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask`\ndefinition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Realm"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a single Realm."
                },
                "previewUpdate": {
                  "id": "gameservices.projects.locations.realms.previewUpdate",
                  "path": "v1alpha/{+name}:previewUpdate",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}:previewUpdate",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the realm, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}`. For\nexample, `projects\/my-project\/locations\/{location}\/realms\/my-realm`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask`\ndefinition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "previewTime": {
                      "description": "Optional. The instant of time at which the preview needs to be computed.",
                      "location": "query",
                      "type": "string",
                      "format": "google-datetime"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Realm"
                  },
                  "response": {
                    "$ref": "PreviewRealmUpdateResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Previews patches to a single Realm."
                }
              }
              ,
              "resources": {
                "gameServerClusters": {
                  "methods": {
                    "list": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.list",
                      "path": "v1alpha/{+parent}/gameServerClusters",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource name, using the form:\n\"projects\/{project_id}\/locations\/{location}\/realms\/{realm-id}\".",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more GameServerClusters left to be queried.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter to apply to list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListGameServerClustersResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists game server clusters in a given project and location."
                    },
                    "get": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.get",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server cluster to retrieve, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm-id}\/gameServerClusters\/{cluster_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+\/gameServerClusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GameServerCluster"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single game server cluster."
                    },
                    "create": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.create",
                      "path": "v1alpha/{+parent}/gameServerClusters",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm-id}`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                          "type": "string"
                        },
                        "gameServerClusterId": {
                          "description": "Required. The ID of the game server cluster resource to be created.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new game server cluster in a given project and location."
                    },
                    "previewCreate": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewCreate",
                      "path": "v1alpha/{+parent}/gameServerClusters:previewCreate",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters:previewCreate",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm-id}`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+$",
                          "type": "string"
                        },
                        "gameServerClusterId": {
                          "description": "Required. The ID of the game server cluster resource to be created.",
                          "location": "query",
                          "type": "string"
                        },
                        "previewTime": {
                          "description": "Optional. The instant of time at which the preview needs to be computed.",
                          "location": "query",
                          "type": "string",
                          "format": "google-datetime"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "response": {
                        "$ref": "PreviewCreateGameServerClusterResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Previews creation of a new game server cluster in a given project and\nlocation."
                    },
                    "delete": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.delete",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server cluster to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerClusters\/{cluster_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+\/gameServerClusters\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single game server cluster."
                    },
                    "previewDelete": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewDelete",
                      "path": "v1alpha/{+name}:previewDelete",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewDelete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server cluster to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/gameServerClusters\/{cluster_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+\/gameServerClusters\/[^\/]+$",
                          "type": "string"
                        },
                        "previewTime": {
                          "description": "Optional. The instant of time at which the preview needs to be computed.",
                          "location": "query",
                          "type": "string",
                          "format": "google-datetime"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "PreviewDeleteGameServerClusterResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Previews deletion of a single game server cluster."
                    },
                    "patch": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.patch",
                      "path": "v1alpha/{+name}",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the game server cluster, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}\/gameServerClusters\/{cluster_id}`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/realms\/zanzibar\/gameServerClusters\/my-onprem-cluster`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+\/gameServerClusters\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Patches a single game server cluster."
                    },
                    "previewUpdate": {
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewUpdate",
                      "path": "v1alpha/{+name}:previewUpdate",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewUpdate",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the game server cluster, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/realms\/{realm_id}\/gameServerClusters\/{cluster_id}`.\nFor example,\n\n`projects\/my-project\/locations\/{location}\/realms\/zanzibar\/gameServerClusters\/my-onprem-cluster`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/realms\/[^\/]+\/gameServerClusters\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "previewTime": {
                          "description": "Optional. The instant of time at which the preview needs to be computed.",
                          "location": "query",
                          "type": "string",
                          "format": "google-datetime"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "response": {
                        "$ref": "PreviewUpdateGameServerClusterResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Previews updating a GameServerCluster."
                    }
                  }
                }
              }
            },
            "scalingPolicies": {
              "methods": {
                "list": {
                  "id": "gameservices.projects.locations.scalingPolicies.list",
                  "path": "v1alpha/{+parent}/scalingPolicies",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scalingPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "\/ Optional. The maximum number of items to return.  If unspecified, server\nwill pick an appropriate default. Server may return fewer items than\nrequested. A caller should only rely on response's\nnext_page_token to\ndetermine if there are more ScalingPolicies left to be queried.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListScalingPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ScalingPolicies in a given project and location."
                },
                "get": {
                  "id": "gameservices.projects.locations.scalingPolicies.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scalingPolicies/{scalingPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the scaling policy to retrieve, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/scalingPolicies\/{scaling_policy_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/scalingPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ScalingPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single scaling policy."
                },
                "create": {
                  "id": "gameservices.projects.locations.scalingPolicies.create",
                  "path": "v1alpha/{+parent}/scalingPolicies",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scalingPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, using the form:\n`projects\/{project_id}\/locations\/{location}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "scalingPolicyId": {
                      "description": "Required. The ID of the scaling policy resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ScalingPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new scaling policy in a given project and location."
                },
                "delete": {
                  "id": "gameservices.projects.locations.scalingPolicies.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scalingPolicies/{scalingPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the scaling policy to delete, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/scalingPolicies\/{scaling_policy_id}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/scalingPolicies\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single scaling policy."
                },
                "patch": {
                  "id": "gameservices.projects.locations.scalingPolicies.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/scalingPolicies/{scalingPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the scaling policy, using the form:\n\n`projects\/{project_id}\/locations\/{location}\/scalingPolicies\/{scaling_policy_id}`.\nFor example,\n`projects\/my-project\/locations\/{location}\/scalingPolicies\/my-policy`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/scalingPolicies\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in\nthis field. For the `FieldMask` definition, see\n\nhttps:\n\/\/developers.google.com\/protocol-buffers\n\/\/ \/docs\/reference\/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ScalingPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a single scaling policy."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}