{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "containeranalysis:v1beta1",
  "name": "containeranalysis",
  "canonicalName": "Container Analysis",
  "version": "v1beta1",
  "revision": "0",
  "title": "Container Analysis API",
  "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/container-analysis/api/reference/rest/",
  "protocol": "rest",
  "rootUrl": "https://containeranalysis.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://containeranalysis.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Occurrence": {
      "id": "Occurrence",
      "description": "An instance of an analysis type that has been found on a resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the occurrence in the form of\n`projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]`.",
          "type": "string"
        },
        "resource": {
          "description": "Required. Immutable. The resource for which the occurrence applies.",
          "$ref": "Resource"
        },
        "noteName": {
          "description": "Required. Immutable. The analysis note associated with this occurrence, in\nthe form of `projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`. This field can be\nused as a filter in list requests.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This explicitly denotes which of the occurrence details are\nspecified. This field can be used as a filter in list requests.",
          "enumDescriptions": [
            "Unknown.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts."
          ],
          "type": "string",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION"
          ]
        },
        "remediation": {
          "description": "A description of actions that can be taken to remedy the note.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time this occurrence was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time this occurrence was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "vulnerability": {
          "description": "Describes a security vulnerability.",
          "$ref": "GrafeasV1beta1VulnerabilityDetails"
        },
        "build": {
          "description": "Describes a verifiable build.",
          "$ref": "GrafeasV1beta1BuildDetails"
        },
        "derivedImage": {
          "description": "Describes how this resource derives from the basis in the associated\nnote.",
          "$ref": "GrafeasV1beta1ImageDetails"
        },
        "installation": {
          "description": "Describes the installation of a package on the linked resource.",
          "$ref": "GrafeasV1beta1PackageDetails"
        },
        "deployment": {
          "description": "Describes the deployment of an artifact on a runtime.",
          "$ref": "GrafeasV1beta1DeploymentDetails"
        },
        "discovered": {
          "description": "Describes when a resource was discovered.",
          "$ref": "GrafeasV1beta1DiscoveryDetails"
        },
        "attestation": {
          "description": "Describes an attestation of an artifact.",
          "$ref": "Details"
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "description": "An entity that can have metadata. For example, a Docker image.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Deprecated, do not use. Use uri instead.\n\nThe name of the resource. For example, the name of a Docker image -\n\"Debian\".",
          "type": "string"
        },
        "uri": {
          "description": "Required. The unique URI of the resource. For example,\n`https:\/\/gcr.io\/project\/image@sha256:foo` for a Docker image.",
          "type": "string"
        },
        "contentHash": {
          "description": "Deprecated, do not use. Use uri instead.\n\nThe hash of the resource content. For example, the Docker digest.",
          "$ref": "Hash"
        }
      }
    },
    "Hash": {
      "id": "Hash",
      "description": "Container message for hash values.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Required. The type of hash that was performed.",
          "enumDescriptions": [
            "Unknown.",
            "A SHA-256 hash."
          ],
          "type": "string",
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256"
          ]
        },
        "value": {
          "description": "Required. The hash value.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GrafeasV1beta1VulnerabilityDetails": {
      "id": "GrafeasV1beta1VulnerabilityDetails",
      "description": "Details of a vulnerability Occurrence.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc)",
          "type": "string"
        },
        "severity": {
          "description": "Output only. The note provider assigned Severity of the vulnerability.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        },
        "cvssScore": {
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
          "type": "number",
          "format": "float"
        },
        "packageIssue": {
          "description": "Required. The set of affected locations and their fixes (if available)\nwithin the associated resource.",
          "type": "array",
          "items": {
            "$ref": "PackageIssue"
          }
        },
        "shortDescription": {
          "description": "Output only. A one sentence description of this vulnerability.",
          "type": "string"
        },
        "longDescription": {
          "description": "Output only. A detailed description of this vulnerability.",
          "type": "string"
        },
        "relatedUrls": {
          "description": "Output only. URLs related to this vulnerability.",
          "type": "array",
          "items": {
            "$ref": "RelatedUrl"
          }
        },
        "effectiveSeverity": {
          "description": "The distro assigned severity for this vulnerability when it is\navailable, and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        }
      }
    },
    "PackageIssue": {
      "id": "PackageIssue",
      "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
      "type": "object",
      "properties": {
        "affectedLocation": {
          "description": "Required. The location of the vulnerability.",
          "$ref": "VulnerabilityLocation"
        },
        "fixedLocation": {
          "description": "The location of the available fix for vulnerability.",
          "$ref": "VulnerabilityLocation"
        },
        "severityName": {
          "description": "Deprecated, use Details.effective_severity instead\nThe severity (e.g., distro assigned severity) for this vulnerability.",
          "type": "string"
        }
      }
    },
    "VulnerabilityLocation": {
      "id": "VulnerabilityLocation",
      "description": "The location of the vulnerability.",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in [cpe format](https:\/\/cpe.mitre.org\/specification\/)\nformat. Examples include distro or storage location for vulnerable jar.",
          "type": "string"
        },
        "package": {
          "description": "Required. The package being described.",
          "type": "string"
        },
        "version": {
          "description": "Required. The version of the package being described.",
          "$ref": "Version"
        }
      }
    },
    "Version": {
      "id": "Version",
      "description": "Version contains structured information about the version of a package.",
      "type": "object",
      "properties": {
        "epoch": {
          "description": "Used to correct mistakes in the version numbering scheme.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
          "type": "string"
        },
        "revision": {
          "description": "The iteration of the package build from the above version.",
          "type": "string"
        },
        "kind": {
          "description": "Required. Distinguishes between sentinel MIN\/MAX versions and normal\nversions.",
          "enumDescriptions": [
            "Unknown.",
            "A standard package version.",
            "A special version representing negative infinity.",
            "A special version representing positive infinity."
          ],
          "type": "string",
          "enum": [
            "VERSION_KIND_UNSPECIFIED",
            "NORMAL",
            "MINIMUM",
            "MAXIMUM"
          ]
        }
      }
    },
    "RelatedUrl": {
      "id": "RelatedUrl",
      "description": "Metadata for any related URL information.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Specific URL associated with the resource.",
          "type": "string"
        },
        "label": {
          "description": "Label to describe usage of the URL.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1BuildDetails": {
      "id": "GrafeasV1beta1BuildDetails",
      "description": "Details of a build occurrence.",
      "type": "object",
      "properties": {
        "provenance": {
          "description": "Required. The actual provenance for the build.",
          "$ref": "BuildProvenance"
        },
        "provenanceBytes": {
          "description": "Serialized JSON representation of the provenance, used in generating the\nbuild signature in the corresponding build note. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
          "type": "string"
        }
      }
    },
    "BuildProvenance": {
      "id": "BuildProvenance",
      "description": "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. Unique identifier of the build.",
          "type": "string"
        },
        "projectId": {
          "description": "ID of the project.",
          "type": "string"
        },
        "commands": {
          "description": "Commands requested by the build.",
          "type": "array",
          "items": {
            "$ref": "Command"
          }
        },
        "builtArtifacts": {
          "description": "Output of the build.",
          "type": "array",
          "items": {
            "$ref": "Artifact"
          }
        },
        "createTime": {
          "description": "Time at which the build was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Time at which execution of the build was started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Time at which execution of the build was finished.",
          "type": "string",
          "format": "google-datetime"
        },
        "creator": {
          "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
          "type": "string"
        },
        "logsUri": {
          "description": "URI where any logs for this provenance were written.",
          "type": "string"
        },
        "sourceProvenance": {
          "description": "Details of the Source input to the build.",
          "$ref": "Source"
        },
        "triggerId": {
          "description": "Trigger identifier if the build was triggered automatically; empty if not.",
          "type": "string"
        },
        "buildOptions": {
          "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "builderVersion": {
          "description": "Version string of the builder at the time this build was executed.",
          "type": "string"
        }
      }
    },
    "Command": {
      "id": "Command",
      "description": "Command describes a step performed as part of the build pipeline.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the command, as presented on the command line, or if the\ncommand is packaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "env": {
          "description": "Environment variables set before running this command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Command-line arguments used when executing this command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dir": {
          "description": "Working directory (relative to project source root) used when running this\ncommand.",
          "type": "string"
        },
        "id": {
          "description": "Optional unique identifier for this command, used in wait_for to reference\nthis command as a dependency.",
          "type": "string"
        },
        "waitFor": {
          "description": "The ID(s) of the command(s) that this command depends on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Artifact": {
      "id": "Artifact",
      "description": "Artifact describes a build product.",
      "type": "object",
      "properties": {
        "checksum": {
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
          "type": "string"
        },
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike `gcr.io\/projectID\/imagename@sha256:123456`.",
          "type": "string"
        },
        "names": {
          "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Source": {
      "id": "Source",
      "description": "Source describes the location of the source used for the build.",
      "type": "object",
      "properties": {
        "artifactStorageSourceUri": {
          "description": "If provided, the input binary artifacts for the build came from this\nlocation.",
          "type": "string"
        },
        "fileHashes": {
          "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
          "type": "object",
          "additionalProperties": {
            "$ref": "FileHashes"
          }
        },
        "context": {
          "description": "If provided, the source code used for the build came from this location.",
          "$ref": "SourceContext"
        },
        "additionalContexts": {
          "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
          "type": "array",
          "items": {
            "$ref": "SourceContext"
          }
        }
      }
    },
    "FileHashes": {
      "id": "FileHashes",
      "description": "Container message for hashes of byte content of files, used in source\nmessages to verify integrity of source input to the build.",
      "type": "object",
      "properties": {
        "fileHash": {
          "description": "Required. Collection of file hashes.",
          "type": "array",
          "items": {
            "$ref": "Hash"
          }
        }
      }
    },
    "SourceContext": {
      "id": "SourceContext",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
      "type": "object",
      "properties": {
        "cloudRepo": {
          "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
          "$ref": "CloudRepoSourceContext"
        },
        "gerrit": {
          "description": "A SourceContext referring to a Gerrit project.",
          "$ref": "GerritSourceContext"
        },
        "git": {
          "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
          "$ref": "GitSourceContext"
        },
        "labels": {
          "description": "Labels with user defined metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CloudRepoSourceContext": {
      "id": "CloudRepoSourceContext",
      "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.",
      "type": "object",
      "properties": {
        "repoId": {
          "description": "The ID of the repo.",
          "$ref": "RepoId"
        },
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        },
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "$ref": "AliasContext"
        }
      }
    },
    "RepoId": {
      "id": "RepoId",
      "description": "A unique identifier for a Cloud Repo.",
      "type": "object",
      "properties": {
        "projectRepoId": {
          "description": "A combination of a project ID and a repo name.",
          "$ref": "ProjectRepoId"
        },
        "uid": {
          "description": "A server-assigned, globally unique identifier.",
          "type": "string"
        }
      }
    },
    "ProjectRepoId": {
      "id": "ProjectRepoId",
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "repoName": {
          "description": "The name of the repo. Leave empty for the default repo.",
          "type": "string"
        }
      }
    },
    "AliasContext": {
      "id": "AliasContext",
      "description": "An alias to a repo revision.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The alias kind.",
          "enumDescriptions": [
            "Unknown.",
            "Git tag.",
            "Git branch.",
            "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs\/foo\/bar\"."
          ],
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "FIXED",
            "MOVABLE",
            "OTHER"
          ]
        },
        "name": {
          "description": "The alias name.",
          "type": "string"
        }
      }
    },
    "GerritSourceContext": {
      "id": "GerritSourceContext",
      "description": "A SourceContext referring to a Gerrit project.",
      "type": "object",
      "properties": {
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "gerritProject": {
          "description": "The full project name within the host. Projects may be nested, so\n\"project\/subproject\" is a valid project name. The \"repo name\" is the\nhostURI\/project.",
          "type": "string"
        },
        "revisionId": {
          "description": "A revision (commit) ID.",
          "type": "string"
        },
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "$ref": "AliasContext"
        }
      }
    },
    "GitSourceContext": {
      "id": "GitSourceContext",
      "description": "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub).",
      "type": "object",
      "properties": {
        "url": {
          "description": "Git repository URL.",
          "type": "string"
        },
        "revisionId": {
          "description": "Git commit hash.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1ImageDetails": {
      "id": "GrafeasV1beta1ImageDetails",
      "description": "Details of an image occurrence.",
      "type": "object",
      "properties": {
        "derivedImage": {
          "description": "Required. Immutable. The child image derived from the base image.",
          "$ref": "Derived"
        }
      }
    },
    "Derived": {
      "id": "Derived",
      "description": "Derived describes the derived image portion (Occurrence) of the DockerImage\nrelationship. This image would be produced from a Dockerfile with FROM\n<DockerImage.Basis in attached Note>.",
      "type": "object",
      "properties": {
        "fingerprint": {
          "description": "Required. The fingerprint of the derived image.",
          "$ref": "Fingerprint"
        },
        "distance": {
          "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
          "type": "integer",
          "format": "int32"
        },
        "layerInfo": {
          "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
          "type": "array",
          "items": {
            "$ref": "Layer"
          }
        },
        "baseResourceUrl": {
          "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
          "type": "string"
        }
      }
    },
    "Fingerprint": {
      "id": "Fingerprint",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "type": "object",
      "properties": {
        "v1Name": {
          "description": "Required. The layer ID of the final layer in the Docker image's v1\nrepresentation.",
          "type": "string"
        },
        "v2Blob": {
          "description": "Required. The ordered list of v2 blobs that represent a given image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "v2Name": {
          "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.",
          "type": "string"
        }
      }
    },
    "Layer": {
      "id": "Layer",
      "description": "Layer holds metadata specific to a layer of a Docker image.",
      "type": "object",
      "properties": {
        "directive": {
          "description": "Required. The recovered Dockerfile directive used to construct this layer.",
          "enumDescriptions": [
            "Default value for unsupported\/missing directive.",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/",
            "https:\/\/docs.docker.com\/engine\/reference\/builder\/"
          ],
          "type": "string",
          "enum": [
            "DIRECTIVE_UNSPECIFIED",
            "MAINTAINER",
            "RUN",
            "CMD",
            "LABEL",
            "EXPOSE",
            "ENV",
            "ADD",
            "COPY",
            "ENTRYPOINT",
            "VOLUME",
            "USER",
            "WORKDIR",
            "ARG",
            "ONBUILD",
            "STOPSIGNAL",
            "HEALTHCHECK",
            "SHELL"
          ]
        },
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1PackageDetails": {
      "id": "GrafeasV1beta1PackageDetails",
      "description": "Details of a package occurrence.",
      "type": "object",
      "properties": {
        "installation": {
          "description": "Required. Where the package was installed.",
          "$ref": "Installation"
        }
      }
    },
    "Installation": {
      "id": "Installation",
      "description": "This represents how a particular software package may be installed on a\nsystem.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the installed package.",
          "type": "string"
        },
        "location": {
          "description": "Required. All of the places within the filesystem versions of this package\nhave been found.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "An occurrence of a particular package installation found within a system's\nfilesystem. E.g., glibc was found in `\/var\/lib\/dpkg\/status`.",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in [CPE format](https:\/\/cpe.mitre.org\/specification\/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "version": {
          "description": "The version installed at this location.",
          "$ref": "Version"
        },
        "path": {
          "description": "The path from which we gathered that this package\/version is installed.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1DeploymentDetails": {
      "id": "GrafeasV1beta1DeploymentDetails",
      "description": "Details of a deployment occurrence.",
      "type": "object",
      "properties": {
        "deployment": {
          "description": "Required. Deployment history for the resource.",
          "$ref": "Deployment"
        }
      }
    },
    "Deployment": {
      "id": "Deployment",
      "description": "The period during which some deployable was active in a runtime.",
      "type": "object",
      "properties": {
        "userEmail": {
          "description": "Identity of the user that triggered this deployment.",
          "type": "string"
        },
        "deployTime": {
          "description": "Required. Beginning of the lifetime of this deployment.",
          "type": "string",
          "format": "google-datetime"
        },
        "undeployTime": {
          "description": "End of the lifetime of this deployment.",
          "type": "string",
          "format": "google-datetime"
        },
        "config": {
          "description": "Configuration used to create this deployment.",
          "type": "string"
        },
        "address": {
          "description": "Address of the runtime element hosting this deployment.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Output only. Resource URI for the artifact being deployed taken from\nthe deployable field with the same name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "platform": {
          "description": "Platform hosting this deployment.",
          "enumDescriptions": [
            "Unknown.",
            "Google Container Engine.",
            "Google App Engine: Flexible Environment.",
            "Custom user-defined platform."
          ],
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "GKE",
            "FLEX",
            "CUSTOM"
          ]
        }
      }
    },
    "GrafeasV1beta1DiscoveryDetails": {
      "id": "GrafeasV1beta1DiscoveryDetails",
      "description": "Details of a discovery occurrence.",
      "type": "object",
      "properties": {
        "discovered": {
          "description": "Required. Analysis status for the discovered resource.",
          "$ref": "Discovered"
        }
      }
    },
    "Discovered": {
      "id": "Discovered",
      "description": "Provides information about the analysis status of a discovered resource.",
      "type": "object",
      "properties": {
        "continuousAnalysis": {
          "description": "Whether the resource is continuously analyzed.",
          "enumDescriptions": [
            "Unknown.",
            "The resource is continuously analyzed.",
            "The resource is ignored for continuous analysis."
          ],
          "type": "string",
          "enum": [
            "CONTINUOUS_ANALYSIS_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ]
        },
        "lastAnalysisTime": {
          "description": "The last time continuous analysis was done for this resource.\nDeprecated, do not use.",
          "type": "string",
          "format": "google-datetime"
        },
        "analysisStatus": {
          "description": "The status of discovery for the resource.",
          "enumDescriptions": [
            "Unknown.",
            "Resource is known but no action has been taken yet.",
            "Resource is being analyzed.",
            "Analysis has finished successfully.",
            "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate.",
            "The resource is known not to be supported"
          ],
          "type": "string",
          "enum": [
            "ANALYSIS_STATUS_UNSPECIFIED",
            "PENDING",
            "SCANNING",
            "FINISHED_SUCCESS",
            "FINISHED_FAILED",
            "FINISHED_UNSUPPORTED"
          ]
        },
        "analysisStatusError": {
          "description": "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage is output only and\npopulated by the API.",
          "$ref": "Status"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Details": {
      "id": "Details",
      "description": "Details of an attestation occurrence.",
      "type": "object",
      "properties": {
        "attestation": {
          "description": "Required. Attestation for the resource.",
          "$ref": "Attestation"
        }
      }
    },
    "Attestation": {
      "id": "Attestation",
      "description": "Occurrence that represents a single \"attestation\". The authenticity of an\nattestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust. In this circumstance, the authority to which\nthis attestation is attached is primarily useful for look-up (how to find\nthis attestation if you already know the authority and artifact to be\nverified) and intent (which authority was this attestation intended to sign\nfor).",
      "type": "object",
      "properties": {
        "pgpSignedAttestation": {
          "description": "A PGP signed attestation.",
          "$ref": "PgpSignedAttestation"
        },
        "genericSignedAttestation": {
          "$ref": "GenericSignedAttestation"
        }
      }
    },
    "PgpSignedAttestation": {
      "id": "PgpSignedAttestation",
      "description": "An attestation wrapper with a PGP-compatible signature. This message only\nsupports `ATTACHED` signatures, where the payload that is signed is included\nalongside the signature itself in the same file.",
      "type": "object",
      "properties": {
        "signature": {
          "description": "Required. The raw content of the signature, as output by GNU Privacy Guard\n(GPG) or equivalent. Since this message only supports attached signatures,\nthe payload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
          "type": "string"
        },
        "contentType": {
          "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See\nhttps:\/\/github.com\/containers\/image\/blob\/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7\/docs\/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."
          ],
          "type": "string",
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ]
        },
        "pgpKeyId": {
          "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexidecimal string. See\nhttps:\/\/tools.ietf.org\/html\/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
          "type": "string"
        }
      }
    },
    "GenericSignedAttestation": {
      "id": "GenericSignedAttestation",
      "description": "An attestation wrapper that uses the Grafeas `Signature` message.\nThis attestation must define the `serialized_payload` that the `signatures`\nverify and any metadata necessary to interpret that plaintext.  The\nsignatures should always be over the `serialized_payload` bytestring.",
      "type": "object",
      "properties": {
        "contentType": {
          "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See\nhttps:\/\/github.com\/containers\/image\/blob\/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7\/docs\/atomic-signature.md\nThe payload extracted in `plaintext` is a JSON blob conforming to the\nlinked schema."
          ],
          "type": "string",
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ]
        },
        "serializedPayload": {
          "description": "The serialized payload that is verified by one or more `signatures`.\nThe encoding and semantic meaning of this payload must match what is set in\n`content_type`.",
          "type": "string",
          "format": "byte"
        },
        "signatures": {
          "description": "One or more signatures over `serialized_payload`.  Verifier implementations\nshould consider this attestation message verified if at least one\n`signature` verifies `serialized_payload`.  See `Signature` in common.proto\nfor more details on signature structure and verification.",
          "type": "array",
          "items": {
            "$ref": "Signature"
          }
        }
      }
    },
    "Signature": {
      "id": "Signature",
      "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures\nwith respect to the trust anchors defined in policy (e.g. a Kritis policy).\nTypically this means that the verifier has been configured with a map from\n`public_key_id` to public key material (and any required parameters, e.g.\nsigning algorithm).\n\nIn particular, verification implementations MUST NOT treat the signature\n`public_key_id` as anything more than a key lookup hint. The `public_key_id`\nDOES NOT validate or authenticate a public key; it only provides a mechanism\nfor quickly selecting a public key ALREADY CONFIGURED on the verifier through\na trusted channel. Verification implementations MUST reject signatures in any\nof the following circumstances:\n  * The `public_key_id` is not recognized by the verifier.\n  * The public key that `public_key_id` refers to does not verify the\n    signature with respect to the payload.\n\nThe `signature` contents SHOULD NOT be \"attached\" (where the payload is\nincluded with the serialized `signature` bytes). Verifiers MUST ignore any\n\"attached\" payload and only verify signatures with respect to explicitly\nprovided payload (e.g. a `payload` field on the proto message that holds\nthis Signature, or the canonical serialization of the proto message that\nholds this signature).",
      "type": "object",
      "properties": {
        "signature": {
          "description": "The content of the signature, an opaque bytestring.\nThe payload that this signature verifies MUST be unambiguously provided\nwith the Signature during verification. A wrapper message might provide\nthe payload explicitly. Alternatively, a message might have a canonical\nserialization that can always be unambiguously computed to derive the\npayload.",
          "type": "string",
          "format": "byte"
        },
        "publicKeyId": {
          "description": "The identifier for the public key that verifies this signature.\n  * The `public_key_id` is required.\n  * The `public_key_id` MUST be an RFC3986 conformant URI.\n  * When possible, the `public_key_id` SHOULD be an immutable reference,\n    such as a cryptographic digest.\n\nExamples of valid `public_key_id`s:\n\nOpenPGP V4 public key fingerprint:\n  * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\"\nSee https:\/\/www.iana.org\/assignments\/uri-schemes\/prov\/openpgp4fpr for more\ndetails on this scheme.\n\nRFC6920 digest-named SubjectPublicKeyInfo (digest of the DER\nserialization):\n  * \"ni:\/\/\/sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\"\n  * \"nih:\/\/\/sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\"",
          "type": "string"
        }
      }
    },
    "ListOccurrencesResponse": {
      "id": "ListOccurrencesResponse",
      "description": "Response for listing occurrences.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences requested.",
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "BatchCreateOccurrencesRequest": {
      "id": "BatchCreateOccurrencesRequest",
      "description": "Request to create occurrences in batch.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "Required. The occurrences to create. Max allowed length is 1000.",
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          }
        }
      }
    },
    "BatchCreateOccurrencesResponse": {
      "id": "BatchCreateOccurrencesResponse",
      "description": "Response for creating occurrences in batch.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences that were created.",
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          }
        }
      }
    },
    "Note": {
      "id": "Note",
      "description": "A type of analysis that can be done for a resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the note in the form of\n`projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`.",
          "type": "string"
        },
        "shortDescription": {
          "description": "A one sentence description of this note.",
          "type": "string"
        },
        "longDescription": {
          "description": "A detailed description of this note.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. The type of analysis. This field can be used as a filter in\nlist requests.",
          "enumDescriptions": [
            "Unknown.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts."
          ],
          "type": "string",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION"
          ]
        },
        "relatedUrl": {
          "description": "URLs associated with this note.",
          "type": "array",
          "items": {
            "$ref": "RelatedUrl"
          }
        },
        "expirationTime": {
          "description": "Time of expiration for this note. Empty if note does not expire.",
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The time this note was created. This field can be used as a\nfilter in list requests.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time this note was last updated. This field can be used as\na filter in list requests.",
          "type": "string",
          "format": "google-datetime"
        },
        "relatedNoteNames": {
          "description": "Other notes related to this note.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vulnerability": {
          "description": "A note describing a package vulnerability.",
          "$ref": "Vulnerability"
        },
        "build": {
          "description": "A note describing build provenance for a verifiable build.",
          "$ref": "Build"
        },
        "baseImage": {
          "description": "A note describing a base image.",
          "$ref": "Basis"
        },
        "package": {
          "description": "A note describing a package hosted by various package managers.",
          "$ref": "Package"
        },
        "deployable": {
          "description": "A note describing something that can be deployed.",
          "$ref": "Deployable"
        },
        "discovery": {
          "description": "A note describing the initial analysis of a resource.",
          "$ref": "Discovery"
        },
        "attestationAuthority": {
          "description": "A note describing an attestation role.",
          "$ref": "Authority"
        }
      }
    },
    "Vulnerability": {
      "id": "Vulnerability",
      "description": "Vulnerability provides metadata about a security vulnerability in a Note.",
      "type": "object",
      "properties": {
        "cvssScore": {
          "description": "The CVSS score for this vulnerability.",
          "type": "number",
          "format": "float"
        },
        "severity": {
          "description": "Note provider assigned impact of the vulnerability.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        },
        "details": {
          "description": "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the package\nvulnerability has manifested in.",
          "type": "array",
          "items": {
            "$ref": "Detail"
          }
        },
        "cvssV3": {
          "description": "The full description of the CVSSv3.",
          "$ref": "CVSSv3"
        },
        "windowsDetails": {
          "description": "Windows details get their own format because the information format and\nmodel don't match a normal detail. Specifically Windows updates are done as\npatches, thus Windows vulnerabilities really are a missing package, rather\nthan a package being at an incorrect version.",
          "type": "array",
          "items": {
            "$ref": "WindowsDetail"
          }
        },
        "sourceUpdateTime": {
          "description": "The time this information was last changed at the source. This is an\nupstream timestamp from the underlying information source - e.g. Ubuntu\nsecurity tracker.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Detail": {
      "id": "Detail",
      "description": "Identifies all appearances of this vulnerability in the package for a\nspecific distro\/location. For example: glibc in\ncpe:\/o:debian:debian_linux:8 for versions 2.1 - 2.2",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in\n[cpe format](https:\/\/cpe.mitre.org\/specification\/) in which the\nvulnerability manifests. Examples include distro or storage location for\nvulnerable jar.",
          "type": "string"
        },
        "package": {
          "description": "Required. The name of the package where the vulnerability was found.",
          "type": "string"
        },
        "minAffectedVersion": {
          "description": "The min version of the package in which the vulnerability exists.",
          "$ref": "Version"
        },
        "maxAffectedVersion": {
          "description": "The max version of the package in which the vulnerability exists.",
          "$ref": "Version"
        },
        "severityName": {
          "description": "The severity (eg: distro assigned severity) for this vulnerability.",
          "type": "string"
        },
        "description": {
          "description": "A vendor-specific description of this note.",
          "type": "string"
        },
        "fixedLocation": {
          "description": "The fix for this specific package version.",
          "$ref": "VulnerabilityLocation"
        },
        "packageType": {
          "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc).",
          "type": "string"
        },
        "isObsolete": {
          "description": "Whether this detail is obsolete. Occurrences are expected not to point to\nobsolete details.",
          "type": "boolean"
        },
        "sourceUpdateTime": {
          "description": "The time this information was last changed at the source. This is an\nupstream timestamp from the underlying information source - e.g. Ubuntu\nsecurity tracker.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "CVSSv3": {
      "id": "CVSSv3",
      "description": "Common Vulnerability Scoring System version 3.\nFor details, see https:\/\/www.first.org\/cvss\/specification-document",
      "type": "object",
      "properties": {
        "baseScore": {
          "description": "The base score is a function of the base metric scores.",
          "type": "number",
          "format": "float"
        },
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "attackVector": {
          "description": "Base Metrics\nRepresents the intrinsic characteristics of a vulnerability that are\nconstant over time and across user environments.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "attackComplexity": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ]
        },
        "privilegesRequired": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ]
        },
        "userInteraction": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "scope": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "confidentialityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "integrityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "availabilityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        }
      }
    },
    "WindowsDetail": {
      "id": "WindowsDetail",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The CPE URI in\n[cpe format](https:\/\/cpe.mitre.org\/specification\/) in which the\nvulnerability manifests. Examples include distro or storage location for\nvulnerable jar.",
          "type": "string"
        },
        "name": {
          "description": "Required. The name of the vulnerability.",
          "type": "string"
        },
        "description": {
          "description": "The description of the vulnerability.",
          "type": "string"
        },
        "fixingKbs": {
          "description": "Required. The names of the KBs which have hotfixes to mitigate this\nvulnerability. Note that there may be multiple hotfixes (and thus\nmultiple KBs) that mitigate a given vulnerability. Currently any listed\nkb's presence is considered a fix.",
          "type": "array",
          "items": {
            "$ref": "KnowledgeBase"
          }
        }
      }
    },
    "KnowledgeBase": {
      "id": "KnowledgeBase",
      "type": "object",
      "properties": {
        "name": {
          "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456).",
          "type": "string"
        },
        "url": {
          "description": "A link to the KB in the Windows update catalog -\nhttps:\/\/www.catalog.update.microsoft.com\/",
          "type": "string"
        }
      }
    },
    "Build": {
      "id": "Build",
      "description": "Note holding the version of the provider's builder and the signature of the\nprovenance message in the build details occurrence.",
      "type": "object",
      "properties": {
        "builderVersion": {
          "description": "Required. Immutable. Version of the builder which produced this build.",
          "type": "string"
        },
        "signature": {
          "description": "Signature of the build in occurrences pointing to this build note\ncontaining build details.",
          "$ref": "BuildSignature"
        }
      }
    },
    "BuildSignature": {
      "id": "BuildSignature",
      "description": "Message encapsulating the signature of the verified build.",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
          "type": "string"
        },
        "signature": {
          "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is\nbase-64 encoded.",
          "type": "string",
          "format": "byte"
        },
        "keyId": {
          "description": "An ID for the key used to sign. This could be either an ID for the key\nstored in `public_key` (such as the ID or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).",
          "type": "string"
        },
        "keyType": {
          "description": "The type of the key, either stored in `public_key` or referenced in\n`key_id`.",
          "enumDescriptions": [
            "`KeyType` is not set.",
            "`PGP ASCII Armored` public key.",
            "`PKIX PEM` public key."
          ],
          "type": "string",
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "PGP_ASCII_ARMORED",
            "PKIX_PEM"
          ]
        }
      }
    },
    "Basis": {
      "id": "Basis",
      "description": "Basis describes the base image portion (Note) of the DockerImage\nrelationship. Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url.",
      "type": "object",
      "properties": {
        "resourceUrl": {
          "description": "Required. Immutable. The resource_url for the resource representing the\nbasis of associated occurrence images.",
          "type": "string"
        },
        "fingerprint": {
          "description": "Required. Immutable. The fingerprint of the base image.",
          "$ref": "Fingerprint"
        }
      }
    },
    "Package": {
      "id": "Package",
      "description": "This represents a particular package that is distributed over various\nchannels. E.g., glibc (aka libc6) is distributed by many, at various\nversions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Immutable. The name of the package.",
          "type": "string"
        },
        "distribution": {
          "description": "The various channels by which a package is distributed.",
          "type": "array",
          "items": {
            "$ref": "Distribution"
          }
        }
      }
    },
    "Distribution": {
      "id": "Distribution",
      "description": "This represents a particular channel of distribution for a given package.\nE.g., Debian's jessie-backports dpkg mirror.",
      "type": "object",
      "properties": {
        "cpeUri": {
          "description": "Required. The cpe_uri in [CPE format](https:\/\/cpe.mitre.org\/specification\/)\ndenoting the package manager version distributing a package.",
          "type": "string"
        },
        "architecture": {
          "description": "The CPU architecture for which packages in this distribution channel were\nbuilt.",
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "type": "string",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ]
        },
        "latestVersion": {
          "description": "The latest available version of this package in this distribution channel.",
          "$ref": "Version"
        },
        "maintainer": {
          "description": "A freeform string denoting the maintainer of this package.",
          "type": "string"
        },
        "url": {
          "description": "The distribution channel-specific homepage for this package.",
          "type": "string"
        },
        "description": {
          "description": "The distribution channel-specific description of this package.",
          "type": "string"
        }
      }
    },
    "Deployable": {
      "id": "Deployable",
      "description": "An artifact that can be deployed in some runtime.",
      "type": "object",
      "properties": {
        "resourceUri": {
          "description": "Required. Resource URI for the artifact being deployed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Discovery": {
      "id": "Discovery",
      "description": "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis.",
      "type": "object",
      "properties": {
        "analysisKind": {
          "description": "Required. Immutable. The kind of analysis that is handled by this\ndiscovery.",
          "enumDescriptions": [
            "Unknown.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts."
          ],
          "type": "string",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION"
          ]
        }
      }
    },
    "Authority": {
      "id": "Authority",
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For\nexample, an organization might have one `Authority` for \"QA\" and one for\n\"build\". This note is intended to act strictly as a grouping mechanism for\nthe attached occurrences (Attestations). This grouping mechanism also\nprovides a security boundary, since IAM ACLs gate the ability for a principle\nto attach an occurrence to a given note. It also provides a single point of\nlookup to find all attached attestation occurrences, even if they don't all\nlive in the same project.",
      "type": "object",
      "properties": {
        "hint": {
          "description": "Hint hints at the purpose of the attestation authority.",
          "$ref": "Hint"
        }
      }
    },
    "Hint": {
      "id": "Hint",
      "description": "This submessage provides human-readable hints about the purpose of the\nauthority. Because the name of a note acts as its resource reference, it is\nimportant to disambiguate the canonical name of the Note (which might be a\nUUID for security purposes) from \"readable\" names more suitable for debug\noutput. Note that these hints should not be used to look up authorities in\nsecurity sensitive contexts, such as when looking up attestations to\nverify.",
      "type": "object",
      "properties": {
        "humanReadableName": {
          "description": "Required. The human readable name of this attestation authority, for\nexample \"qa\".",
          "type": "string"
        }
      }
    },
    "ListNotesResponse": {
      "id": "ListNotesResponse",
      "description": "Response for listing notes.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes requested.",
          "type": "array",
          "items": {
            "$ref": "Note"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        }
      }
    },
    "BatchCreateNotesRequest": {
      "id": "BatchCreateNotesRequest",
      "description": "Request to create notes in batch.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "Required. The notes to create. Max allowed length is 1000.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Note"
          }
        }
      }
    },
    "BatchCreateNotesResponse": {
      "id": "BatchCreateNotesResponse",
      "description": "Response for creating notes in batch.",
      "type": "object",
      "properties": {
        "notes": {
          "description": "The notes that were created.",
          "type": "array",
          "items": {
            "$ref": "Note"
          }
        }
      }
    },
    "ListNoteOccurrencesResponse": {
      "id": "ListNoteOccurrencesResponse",
      "description": "Response for listing occurrences for a note.",
      "type": "object",
      "properties": {
        "occurrences": {
          "description": "The occurrences attached to the specified note.",
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          }
        },
        "nextPageToken": {
          "description": "Token to provide to skip to a particular spot in the list.",
          "type": "string"
        }
      }
    },
    "VulnerabilityOccurrencesSummary": {
      "id": "VulnerabilityOccurrencesSummary",
      "description": "A summary of how many vulnerability occurrences there are per resource and\nseverity type.",
      "type": "object",
      "properties": {
        "counts": {
          "description": "A listing by resource of the number of fixable and total vulnerabilities.",
          "type": "array",
          "items": {
            "$ref": "FixableTotalByDigest"
          }
        }
      }
    },
    "FixableTotalByDigest": {
      "id": "FixableTotalByDigest",
      "description": "Per resource and severity counts of fixable and total vulnerabilities.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The affected resource.",
          "$ref": "Resource"
        },
        "severity": {
          "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across\nall severities.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        },
        "fixableCount": {
          "description": "The number of fixable vulnerabilities associated with this resource.",
          "type": "string",
          "format": "int64"
        },
        "totalCount": {
          "description": "The total number of vulnerabilities associated with this resource.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example,`alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`. This field is only used by Cloud IAM.",
          "$ref": "GetPolicyOptions"
        }
      }
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScanConfig": {
      "id": "ScanConfig",
      "description": "A scan configuration specifies whether Cloud components in a project have a\nparticular type of analysis being run. For example, it can configure whether\nvulnerability scanning is being done on Docker images or not.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the scan configuration in the form of\n`projects\/[PROJECT_ID]\/scanConfigs\/[SCAN_CONFIG_ID]`.",
          "type": "string"
        },
        "description": {
          "description": "Output only. A human-readable description of what the scan configuration\ndoes.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether the scan is enabled.",
          "type": "boolean"
        },
        "createTime": {
          "description": "Output only. The time this scan config was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time this scan config was last updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListScanConfigsResponse": {
      "id": "ListScanConfigsResponse",
      "description": "Response for listing scan configurations.",
      "type": "object",
      "properties": {
        "scanConfigs": {
          "description": "The scan configurations requested.",
          "type": "array",
          "items": {
            "$ref": "ScanConfig"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.",
          "type": "string"
        }
      }
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "id": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "description": "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time this operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time that this operation was marked completed or failed.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "occurrences": {
          "methods": {
            "get": {
              "id": "containeranalysis.projects.occurrences.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the occurrence in the form of\n`projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the specified occurrence."
            },
            "list": {
              "id": "containeranalysis.projects.occurrences.list",
              "path": "v1beta1/{+parent}/occurrences",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to list occurrences for in the form of\n`projects\/[PROJECT_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Number of occurrences to return in the list. Must be positive. Max allowed\npage size is 1000. If not specified, page size defaults to 20.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListOccurrencesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists occurrences for the specified project."
            },
            "delete": {
              "id": "containeranalysis.projects.occurrences.delete",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the occurrence in the form of\n`projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes the specified occurrence. For example, use this method to delete an\noccurrence when the occurrence is no longer applicable for the given\nresource."
            },
            "create": {
              "id": "containeranalysis.projects.occurrences.create",
              "path": "v1beta1/{+parent}/occurrences",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in the form of `projects\/[PROJECT_ID]`, under which\nthe occurrence is to be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new occurrence."
            },
            "batchCreate": {
              "id": "containeranalysis.projects.occurrences.batchCreate",
              "path": "v1beta1/{+parent}/occurrences:batchCreate",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:batchCreate",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in the form of `projects\/[PROJECT_ID]`, under which\nthe occurrences are to be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "BatchCreateOccurrencesRequest"
              },
              "response": {
                "$ref": "BatchCreateOccurrencesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates new occurrences in batch."
            },
            "patch": {
              "id": "containeranalysis.projects.occurrences.patch",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Required. The name of the occurrence in the form of\n`projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "The fields to update.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates the specified occurrence."
            },
            "getNotes": {
              "id": "containeranalysis.projects.occurrences.getNotes",
              "path": "v1beta1/{+name}/notes",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}/notes",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the occurrence in the form of\n`projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Note"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the note attached to the specified occurrence. Consumer projects can\nuse this method to get a note that belongs to a provider project."
            },
            "getVulnerabilitySummary": {
              "id": "containeranalysis.projects.occurrences.getVulnerabilitySummary",
              "path": "v1beta1/{+parent}/occurrences:vulnerabilitySummary",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:vulnerabilitySummary",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to get a vulnerability summary for in the form of\n`projects\/[PROJECT_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "VulnerabilityOccurrencesSummary"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets a summary of the number and severity of occurrences."
            },
            "setIamPolicy": {
              "id": "containeranalysis.projects.occurrences.setIamPolicy",
              "path": "v1beta1/{+resource}:setIamPolicy",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:setIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Sets the access control policy on the specified note or occurrence.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or an occurrence, respectively.\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            },
            "getIamPolicy": {
              "id": "containeranalysis.projects.occurrences.getIamPolicy",
              "path": "v1beta1/{+resource}:getIamPolicy",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:getIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the access control policy for a note or an occurrence resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            },
            "testIamPermissions": {
              "id": "containeranalysis.projects.occurrences.testIamPermissions",
              "path": "v1beta1/{+resource}:testIamPermissions",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:testIamPermissions",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/occurrences\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns the permissions that a caller has on the specified note or\noccurrence. Requires list permission on the project (for example,\n`containeranalysis.notes.list`).\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            }
          }
        },
        "notes": {
          "methods": {
            "get": {
              "id": "containeranalysis.projects.notes.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the note in the form of\n`projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Note"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the specified note."
            },
            "list": {
              "id": "containeranalysis.projects.notes.list",
              "path": "v1beta1/{+parent}/notes",
              "flatPath": "v1beta1/projects/{projectsId}/notes",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to list notes for in the form of\n`projects\/[PROJECT_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Number of notes to return in the list. Must be positive. Max allowed page\nsize is 1000. If not specified, page size defaults to 20.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListNotesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists notes for the specified project."
            },
            "delete": {
              "id": "containeranalysis.projects.notes.delete",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the note in the form of\n`projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes the specified note."
            },
            "create": {
              "id": "containeranalysis.projects.notes.create",
              "path": "v1beta1/{+parent}/notes",
              "flatPath": "v1beta1/projects/{projectsId}/notes",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in the form of `projects\/[PROJECT_ID]`, under which\nthe note is to be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "noteId": {
                  "description": "Required. The ID to use for this note.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Note"
              },
              "response": {
                "$ref": "Note"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new note."
            },
            "batchCreate": {
              "id": "containeranalysis.projects.notes.batchCreate",
              "path": "v1beta1/{+parent}/notes:batchCreate",
              "flatPath": "v1beta1/projects/{projectsId}/notes:batchCreate",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in the form of `projects\/[PROJECT_ID]`, under which\nthe notes are to be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "BatchCreateNotesRequest"
              },
              "response": {
                "$ref": "BatchCreateNotesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates new notes in batch."
            },
            "patch": {
              "id": "containeranalysis.projects.notes.patch",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Required. The name of the note in the form of\n`projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "The fields to update.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Note"
              },
              "response": {
                "$ref": "Note"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates the specified note."
            },
            "setIamPolicy": {
              "id": "containeranalysis.projects.notes.setIamPolicy",
              "path": "v1beta1/{+resource}:setIamPolicy",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:setIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Sets the access control policy on the specified note or occurrence.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or an occurrence, respectively.\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            },
            "getIamPolicy": {
              "id": "containeranalysis.projects.notes.getIamPolicy",
              "path": "v1beta1/{+resource}:getIamPolicy",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:getIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the access control policy for a note or an occurrence resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            },
            "testIamPermissions": {
              "id": "containeranalysis.projects.notes.testIamPermissions",
              "path": "v1beta1/{+resource}:testIamPermissions",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:testIamPermissions",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns the permissions that a caller has on the specified note or\noccurrence. Requires list permission on the project (for example,\n`containeranalysis.notes.list`).\n\nThe resource takes the format `projects\/[PROJECT_ID]\/notes\/[NOTE_ID]` for\nnotes and `projects\/[PROJECT_ID]\/occurrences\/[OCCURRENCE_ID]` for\noccurrences."
            }
          }
          ,
          "resources": {
            "occurrences": {
              "methods": {
                "list": {
                  "id": "containeranalysis.projects.notes.occurrences.list",
                  "path": "v1beta1/{+name}/occurrences",
                  "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}/occurrences",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the note to list occurrences for in the form of\n`projects\/[PROVIDER_ID]\/notes\/[NOTE_ID]`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/notes\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The filter expression.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Number of occurrences to return in the list.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Token to provide to skip to a particular spot in the list.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListNoteOccurrencesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists occurrences referencing the specified note. Provider projects can use\nthis method to get all occurrences across consumer projects referencing the\nspecified note."
                }
              }
            }
          }
        },
        "scanConfigs": {
          "methods": {
            "get": {
              "id": "containeranalysis.projects.scanConfigs.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs/{scanConfigsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the scan configuration in the form of\n`projects\/[PROJECT_ID]\/scanConfigs\/[SCAN_CONFIG_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/scanConfigs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ScanConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the specified scan configuration."
            },
            "list": {
              "id": "containeranalysis.projects.scanConfigs.list",
              "path": "v1beta1/{+parent}/scanConfigs",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to list scan configurations for in the form of\n`projects\/[PROJECT_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "Required. The filter expression.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The number of scan configs to return in the list.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListScanConfigsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists scan configurations for the specified project."
            },
            "update": {
              "id": "containeranalysis.projects.scanConfigs.update",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs/{scanConfigsId}",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "Required. The name of the scan configuration in the form of\n`projects\/[PROJECT_ID]\/scanConfigs\/[SCAN_CONFIG_ID]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/scanConfigs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "ScanConfig"
              },
              "response": {
                "$ref": "ScanConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates the specified scan configuration."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}