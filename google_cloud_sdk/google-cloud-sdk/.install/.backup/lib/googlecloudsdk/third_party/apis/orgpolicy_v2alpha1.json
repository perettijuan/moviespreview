{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "orgpolicy:v2alpha1",
  "name": "orgpolicy",
  "canonicalName": "Orgpolicy",
  "version": "v2alpha1",
  "revision": "0",
  "title": "orgpolicy API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "",
  "protocol": "rest",
  "rootUrl": "https://orgpolicy.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://orgpolicy.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudOrgpolicyV2alpha1ListConstraintsResponse": {
      "id": "GoogleCloudOrgpolicyV2alpha1ListConstraintsResponse",
      "description": "The response returned from the ListConstraints method.",
      "type": "object",
      "properties": {
        "constraints": {
          "description": "The collection of constraints that are available on the targeted resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Constraint"
          }
        },
        "nextPageToken": {
          "description": "Page token used to retrieve the next page. This is currently not used.",
          "type": "string"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1Constraint": {
      "id": "GoogleCloudOrgpolicyV2alpha1Constraint",
      "description": "A `Constraint` describes a way in which a resource's configuration can be\nrestricted. For example, it controls which cloud services can be activated\nacross an organization, or whether a Compute Engine instance can have\nserial port connections established. `Constraints` can be configured by the\norganization's policy adminstrator to fit the needs of the organzation by\nsetting Policies for `Constraints` at different locations in the\norganization's resource hierarchy. Policies are inherited down the resource\nhierarchy from higher levels, but can also be overridden. For details about\nthe inheritance rules please read about\nPolicies.\n\n`Constraints` have a default behavior determined by the `constraint_default`\nfield, which is the enforcement behavior that is used in the absence of a\n`Policy` being defined or inherited for the resource in question.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the Constraint. Must be in one of\nthe following forms:\n* `projects\/{project_number}\/constraints\/{constraint_name}`\n* `folders\/{folder_id}\/constraints\/{constraint_name}`\n* `organizations\/{organization_id}\/constraints\/{constraint_name}`\n\nFor example, \"\/projects\/123\/constraints\/compute.disableSerialPortAccess\".\n\nImmutable.",
          "type": "string"
        },
        "displayName": {
          "description": "The human readable name.\n\nMutable.",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of what this `Constraint` controls as well as how and\nwhere it is enforced.\n\nMutable.",
          "type": "string"
        },
        "constraintDefault": {
          "description": "The evaluation behavior of this constraint in the absense of 'Policy'.",
          "enumDescriptions": [
            "This is only used for distinguishing unset values and should never be\nused.",
            "Indicate that all values are allowed for list constraints.\nIndicate that enforcement is off for boolean constraints.",
            "Indicate that all values are denied for list constraints.\nIndicate that enforcement is on for boolean constraints."
          ],
          "type": "string",
          "enum": [
            "CONSTRAINT_DEFAULT_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ]
        },
        "listConstraint": {
          "description": "Defines this constraint as being a ListConstraint.",
          "$ref": "GoogleCloudOrgpolicyV2alpha1ConstraintListConstraint"
        },
        "booleanConstraint": {
          "description": "Defines this constraint as being a BooleanConstraint.",
          "$ref": "GoogleCloudOrgpolicyV2alpha1ConstraintBooleanConstraint"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1ConstraintListConstraint": {
      "id": "GoogleCloudOrgpolicyV2alpha1ConstraintListConstraint",
      "description": "A `Constraint` that allows or disallows a list of string values, which are\nconfigured by an Organization's policy administrator with a `Policy`.",
      "type": "object",
      "properties": {
        "supportsUnder": {
          "description": "Indicates whether subtrees of Cloud Resource Manager resource hierarchy\ncan be used in `Policy.allowed_values` and `Policy.denied_values`. For\nexample, `\"under:folders\/123\"` would match any resource under the\n'folders\/123' folder.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1ConstraintBooleanConstraint": {
      "id": "GoogleCloudOrgpolicyV2alpha1ConstraintBooleanConstraint",
      "description": "A `Constraint` that is either enforced or not.\n\nFor example a constraint `constraints\/compute.disableSerialPortAccess`.\nIf it is enforced on a VM instance, serial port connections will not be\nopened to that instance.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudOrgpolicyV2alpha1ListPoliciesResponse": {
      "id": "GoogleCloudOrgpolicyV2alpha1ListPoliciesResponse",
      "description": "The response returned from the ListPolicies method. It will be empty\nif no `Policies` are set on the resource.",
      "type": "object",
      "properties": {
        "policies": {
          "description": "All `Policies` that exist on the resource. It will be empty if no\n`Policies` are set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          }
        },
        "nextPageToken": {
          "description": "Page token used to retrieve the next page. This is currently not used, but\nthe server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1Policy": {
      "id": "GoogleCloudOrgpolicyV2alpha1Policy",
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "GoogleCloudOrgpolicyV2alpha1PolicySpec"
        },
        "alternate": {
          "description": "An alternate policy configuration that will be used instead of the baseline\npolicy configurations as determined by the launch.\nCurrently the only way the launch can trigger the alternate configuration\nis via dry-run\/dark.",
          "$ref": "GoogleCloudOrgpolicyV2alpha1AlternatePolicySpec"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1PolicySpec": {
      "id": "GoogleCloudOrgpolicyV2alpha1PolicySpec",
      "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints`\nfor configurations of Cloud Platform resources.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "etag": {
          "description": "This field is ignored if used in a `CreatePolicy` request.\n\nWhen the `Policy` is returned from either a `GetPolicy` or a\n`ListPolicies` request, this `etag` indicates the version of the\ncurrent `Policy` to use when executing a read-modify-write loop.\n\nWhen the `Policy` is returned from a `GetEffectivePolicy` request, the\n`etag` will be unset.\n\nWhen the `Policy` is used in a `UpdatePolicy` method, use the `etag` value\nthat was returned from a `GetPolicy` request as part of a\nread-modify-write loop for concurrency control. If `UpdatePolicyRequest`'s\n`force_unconditional_write` field is set to true, this field must not be\nset. Otherwise, the `etag` is required for `UpdatePolicy`.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time stamp the `Policy` was previously updated. This\nrepresents the last time a call to `CreatePolicy` or `UpdatePolicy` was\nmade for that `Policy`.",
          "type": "string",
          "format": "google-datetime"
        },
        "rules": {
          "description": "Up to 10 PolicyRules are allowed.\n\nIn Policies for boolean constraints, the following requirements apply:\n  - There must be one and only one PolicyRule where condition is unset.\n  - BooleanPolicyRules with conditions must set `enforced` to the opposite\n    of the PolicyRule without a condition.\n  - During policy evaluation, PolicyRules with conditions that are\n    true for a target resource take precedence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRule"
          }
        },
        "inheritFromParent": {
          "description": "This field can be set only for Policies which configure list constraints.",
          "type": "boolean"
        },
        "reset": {
          "description": "Ignores policies set above this resource and restores the\n`constraint_default` enforcement behavior of the specific `Constraint` at\nthis resource.\nThis field can be set in policies for either list or boolean\nconstraints. If set, `rules` must be empty and `inherit_from_parent`\nmust be set to false.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRule": {
      "id": "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRule",
      "description": "A rule used to express this policy.",
      "type": "object",
      "properties": {
        "values": {
          "description": "List of values to be used for this PolicyRule. This field can be set\nonly in Policies for list constraints.",
          "$ref": "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRuleStringValues"
        },
        "allowAll": {
          "description": "Setting this to true means that all values are allowed. This field can\nbe set only in Policies for list constraints.",
          "type": "boolean"
        },
        "denyAll": {
          "description": "Setting this to true means that all values are denied. This field can\nbe set only in Policies for list constraints.",
          "type": "boolean"
        },
        "enforce": {
          "description": "If `true`, then the `Policy` is enforced. If `false`, then any\nconfiguration is acceptable.\nThis field can be set only in Policies for boolean constraints.",
          "type": "boolean"
        },
        "condition": {
          "description": "An optional condition which determines whether this rule is used\nin the evaluation of the policy. When set, the `expression` field in\nthe `Expr` must have the form \"resource.matchLabels(key_id, value_id)\",\nwhere key_id and value_id are the numeric identifiers for Label Keys\nand Values. These identifiers are available from the Label Manager\nService.",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRuleStringValues": {
      "id": "GoogleCloudOrgpolicyV2alpha1PolicySpecPolicyRuleStringValues",
      "description": "A message that holds specific allowed and denied values.\nThis message can define specific values and subtrees of Cloud Resource\nManager resource hierarchy (`Organizations`, `Folders`, `Projects`) that\nare allowed or denied. This is achieved by using the `under:` and\noptional `is:` prefixes.\nThe `under:` prefix is used to denote resource subtree values.\nThe `is:` prefix is used to denote specific values, and is required only\nif the value contains a \":\". Values prefixed with \"is:\" are treated the\nsame as values with no prefix.\nAncestry subtrees must be in one of the following formats:\n    - \"projects\/<project-id>\", e.g. \"projects\/tokyo-rain-123\"\n    - \"folders\/<folder-id>\", e.g. \"folders\/1234\"\n    - \"organizations\/<organization-id>\", e.g. \"organizations\/1234\"\nThe `supports_under` field of the associated `Constraint`  defines\nwhether ancestry prefixes can be used.",
      "type": "object",
      "properties": {
        "allowedValues": {
          "description": "List of values allowed at this resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deniedValues": {
          "description": "List of values denied at this resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GoogleCloudOrgpolicyV2alpha1AlternatePolicySpec": {
      "id": "GoogleCloudOrgpolicyV2alpha1AlternatePolicySpec",
      "type": "object",
      "properties": {
        "launch": {
          "description": "Reference to the launch that will be used while audit logging and to\ncontrol the launch.\nShould be set only in the alternate policy.",
          "type": "string"
        },
        "spec": {
          "$ref": "GoogleCloudOrgpolicyV2alpha1PolicySpec"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "constraints": {
      "methods": {
        "list": {
          "id": "orgpolicy.constraints.list",
          "path": "v2alpha1/{+parent}/constraints",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/constraints",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "The Cloud resource that parents the constraint. Must be in one of the\nfollowing forms:\n* `projects\/{project_number}`\n* `projects\/{project_id}`\n* `folders\/{folder_id}`\n* `organizations\/{organization_id}`",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "pageSize": {
              "description": "Size of the pages to be returned. This is currently unsupported and will\nbe ignored. The server may at any point start using this field to limit\npage size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token used to retrieve the next page. This is currently unsupported\nand will be ignored. The server may at any point start using this field.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1ListConstraintsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists `Constraints` that could be applied on the specified resource."
        }
      }
    },
    "policies": {
      "methods": {
        "list": {
          "id": "orgpolicy.policies.list",
          "path": "v2alpha1/{+parent}/policies",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "The target Cloud resource that parents the set of constraints and policies\nthat will be returned from this call. Must be in one of the following\nforms:\n* `projects\/{project_number}`\n* `projects\/{project_id}`\n* `folders\/{folder_id}`\n* `organizations\/{organization_id}`",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "pageSize": {
              "description": "Size of the pages to be returned. This is currently unsupported and will\nbe ignored. The server may at any point start using this field to limit\npage size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token used to retrieve the next page. This is currently unsupported\nand will be ignored. The server may at any point start using this field.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1ListPoliciesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves all of the `Policies` that exist on a particular resource."
        },
        "get": {
          "id": "orgpolicy.policies.get",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies/{policiesId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Resource name of the policy. See `Policy` for naming requirements.",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+\/policies\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets a `Policy` on a resource.\n\nIf no `Policy` is set on the resource, NOT_FOUND is returned. The\n`etag` value can be used with `UpdatePolicy()` to update a\n`Policy` during read-modify-write."
        },
        "getEffectivePolicy": {
          "id": "orgpolicy.policies.getEffectivePolicy",
          "path": "v2alpha1/{+name}:getEffectivePolicy",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies/{policiesId}:getEffectivePolicy",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The effective policy to compute. See `Policy` for naming rules.",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+\/policies\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the effective `Policy` on a resource. This is the result of merging\n`Policies` in the resource hierarchy and evaluating conditions. The\nreturned `Policy` will not have an `etag` or `condition` set because it is\na computed `Policy` across multiple resources.\nSubtrees of Resource Manager resource hierarchy with 'under:' prefix will\nnot be expanded."
        },
        "create": {
          "id": "orgpolicy.policies.create",
          "path": "v2alpha1/{+parent}/policies",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies",
          "httpMethod": "POST",
          "parameters": {
            "parent": {
              "description": "The Cloud resource that will parent the new Policy. Must be in one of the\nfollowing forms:\n* `projects\/{project_number}`\n* `projects\/{project_id}`\n* `folders\/{folder_id}`\n* `organizations\/{organization_id}`",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "constraint": {
              "description": "The name of the `Constraint` the `Policy` is configuring, for\nexample, `constraints\/compute.disableSerialPortAccess`.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "request": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a Policy.\n\nReturns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the\nconstraint does not exist.\nReturns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the\npolicy already exists on the given Cloud resource."
        },
        "patch": {
          "id": "orgpolicy.policies.patch",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies/{policiesId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+\/policies\/[^\/]+$",
              "type": "string"
            },
            "forceUnconditionalWrite": {
              "description": "Indicates that this request should overwrite the current policy and ignore\nthe `etag` used for optimistic currency control. When set to true, `etag`\nin `Policy` must be unset. Otherwise, `etag` is required.",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "response": {
            "$ref": "GoogleCloudOrgpolicyV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates a Policy.\n\nReturns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the\nconstraint or the policy do not exist.\nReturns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag\nsupplied in the request does not match the persisted etag of the policy\n\nNote: the supplied policy will perform a full overwrite of all\nfields."
        },
        "delete": {
          "id": "orgpolicy.policies.delete",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/{v2alpha1Id}/{v2alpha1Id1}/policies/{policiesId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Name of the policy to delete.\nSee `Policy` for naming rules.",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+\/policies\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a Policy.\n\nReturns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the\nconstraint or Org Policy does not exist."
        }
      }
    }
  },
  "basePath": ""
}

