{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "secretmanager:v1alpha",
  "name": "secretmanager",
  "canonicalName": "Secret Manager",
  "version": "v1alpha",
  "revision": "0",
  "title": "Secret Manager API",
  "description": "Stores, manages, and secures access to application secrets.\n",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/solutions/secrets-management/",
  "protocol": "rest",
  "rootUrl": "https://secretmanager.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://secretmanager.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListSecretsResponse": {
      "id": "ListSecretsResponse",
      "description": "Response message for SecretManagerService.ListSecrets.",
      "type": "object",
      "properties": {
        "secrets": {
          "description": "The list of Secrets sorted in reverse by create_time (newest\nfirst).",
          "type": "array",
          "items": {
            "$ref": "Secret"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in\nListSecretsRequest.page_token to retrieve the next page.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of Secrets.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Secret": {
      "id": "Secret",
      "description": "A Secret represents a logical secret whose value and versions can\nbe accessed.\n\nA Secret is made up of zero or more SecretVersions that\nrepresent the secret data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the Secret in the\nformat `projects\/*\/secrets\/*`.",
          "type": "string"
        },
        "policy": {
          "description": "Required. The replication policy of the secret data associated with the\nSecret.",
          "$ref": "ReplicationPolicy"
        },
        "createTime": {
          "description": "Output only. The time at which the Secret was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels with user-defined metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "A mechanism for optimistic concurrency control. It is strongly suggested\nthat systems make use of the `etag` in the read-modify-write cycle to\nperform secret updates in order to avoid race conditions.\n\nAn `etag` is returned in SecretManagerService.GetSecret, and systems\nare expected to provide the `etag` in\nSecretManagerService.UpdateSecret to ensure that the update will be\napplied to the same version of the secret.\n\nIf no `etag` is provided, the existing Secret is overwritten blindly.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ReplicationPolicy": {
      "id": "ReplicationPolicy",
      "description": "A policy that defines the replication configuration of data. A replication\npolicy must have at least one replica location to be valid.",
      "type": "object",
      "properties": {
        "replicaLocations": {
          "description": "The canonical IDs for GCP locations to replicate data into.\nFor example: `\"us-east1\"`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SetSecretPayloadRequest": {
      "id": "SetSecretPayloadRequest",
      "description": "Request message for SecretManagerService.SetSecretPayload.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "Required. The secret payload of the SecretVersion.",
          "$ref": "SecretPayload"
        }
      }
    },
    "SecretPayload": {
      "id": "SecretPayload",
      "description": "A secret payload resource in the Secret Mangement API. This contains the\nsensitive secret data that is associated with a SecretVersion.",
      "type": "object",
      "properties": {
        "data": {
          "description": "The secret data.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "SecretVersion": {
      "id": "SecretVersion",
      "description": "A secret version resource in the Secret Manager API.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the SecretVersion in the\nformat `projects\/*\/secrets\/*\/versions\/*`.\n\nSecretVersion IDs in a Secret start at 1 and\nare incremented for each subsequent version of the secret.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which the SecretVersion was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "destroyTime": {
          "description": "Output only. The time this SecretVersion was destroyed. Only present\nif state is\nDESTROYED.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The current state of the SecretVersion.",
          "enumDescriptions": [
            "Not specified.",
            "The SecretVersion may be accessed.",
            "The SecretVersion may not be accessed, but the secret data\nis still available and can be placed back into the ENABLED\nstate.",
            "The SecretVersion is destroyed and the secret data is no longer\nstored. A version may not leave this state once entered."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DESTROYED"
          ]
        }
      }
    },
    "ListSecretVersionsResponse": {
      "id": "ListSecretVersionsResponse",
      "description": "Response message for SecretManagerService.ListSecretVersions.",
      "type": "object",
      "properties": {
        "versions": {
          "description": "The list of SecretVersions sorted in reverse by\ncreate_time (newest first).",
          "type": "array",
          "items": {
            "$ref": "SecretVersion"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in\nListSecretVersionsRequest.page_token to retrieve the next page.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of SecretVersions.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessSecretVersionResponse": {
      "id": "AccessSecretVersionResponse",
      "description": "Response message for SecretManagerService.AccessSecretVersion.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "Secret payload",
          "$ref": "SecretPayload"
        }
      }
    },
    "AccessLatestSecretResponse": {
      "id": "AccessLatestSecretResponse",
      "description": "Response message for SecretManagerService.AccessSecret.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "Secret payload",
          "$ref": "SecretPayload"
        },
        "version": {
          "description": "The SecretVersion accessed.",
          "$ref": "SecretVersion"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "DestroySecretVersionRequest": {
      "id": "DestroySecretVersionRequest",
      "description": "Request message for SecretManagerService.DestroySecretVersion.",
      "type": "object",
      "properties": {
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions (defined by IAM or configured by users). A `binding` can\noptionally specify a `condition`, which is a logic expression that further\nconstrains the role binding based on attributes about the request and\/or\ntarget resource.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time <\n            timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https:\/\/cloud.google.com\/iam\/docs).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nOperations affecting conditional bindings must specify version 3. This can\nbe either setting a conditional policy, modifying a conditional binding,\nor removing a conditional binding from the stored conditional policy.\nOperations on non-conditional policies may specify any valid value or\nleave the field unset.\n\nIf no etag is provided in the call to `setIamPolicy`, any version\ncompliance checks on the incoming and\/or stored policy is skipped.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally may specify a\n`condition` that determines when binding is in effect.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten. Due to blind-set semantics of an etag-less policy,\n'setIamPolicy' will not fail even if either of incoming or stored policy\ndoes not meet the version requirements.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "secretmanager.projects.locations.list",
              "path": "v1alpha/{+name}/locations",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "secretmanager.projects.locations.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
        },
        "secrets": {
          "methods": {
            "list": {
              "id": "secretmanager.projects.secrets.list",
              "path": "v1alpha/{+parent}/secrets",
              "flatPath": "v1alpha/projects/{projectsId}/secrets",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the project associated with the\nSecrets, in the format `projects\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to be returned in a single page. If\nset to 0, the server will decide the number of results to return. If the\nnumber is greater than 25000, it will be capped at 25000.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional pagination token, returned earlier via\nListSecretsResponse.next_page_token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListSecretsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists Secrets."
            },
            "create": {
              "id": "secretmanager.projects.secrets.create",
              "path": "v1alpha/{+parent}/secrets",
              "flatPath": "v1alpha/projects/{projectsId}/secrets",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the project to associate with the\nSecret, in the format `projects\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "secretId": {
                  "description": "Required. This must be unique within the project.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Secret"
              },
              "response": {
                "$ref": "Secret"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new Secret containing no SecretVersions."
            },
            "setPayload": {
              "id": "secretmanager.projects.secrets.setPayload",
              "path": "v1alpha/{+parent}:setPayload",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}:setPayload",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the Secret to associate with the\nSecretVersion in the format `projects\/*\/secrets\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SetSecretPayloadRequest"
              },
              "response": {
                "$ref": "SecretVersion"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new SecretVersion containing secret data and associates\nit with an existing Secret."
            },
            "get": {
              "id": "secretmanager.projects.secrets.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the Secret, in the\nformat `projects\/*\/secrets\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Secret"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns metadata for a given Secret."
            },
            "getLatest": {
              "id": "secretmanager.projects.secrets.getLatest",
              "path": "v1alpha/{+name}/latest",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/latest",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the Secret in the format\n`projects\/*\/secrets\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SecretVersion"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns the metadata of the latest SecretVersion for a given\nSecret."
            },
            "patch": {
              "id": "secretmanager.projects.secrets.patch",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Output only. The resource name of the Secret in the\nformat `projects\/*\/secrets\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required. Specifies the fields to be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Secret"
              },
              "response": {
                "$ref": "Secret"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates metadata of an existing Secret."
            },
            "delete": {
              "id": "secretmanager.projects.secrets.delete",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the Secret to delete in the format\n`projects\/*\/secrets\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a Secret. This call will fail if the Secret contains\none or more SecretVersions in a state that is not\nDESTROYED."
            },
            "setIamPolicy": {
              "id": "secretmanager.projects.secrets.setIamPolicy",
              "path": "v1alpha/{+resource}:setIamPolicy",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}:setIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Sets the access control policy on the specified secret. Replaces any\nexisting policy.\n\nPermissions on SecretVersions are enforced according\nto the policy set on the associated Secret."
            },
            "getIamPolicy": {
              "id": "secretmanager.projects.secrets.getIamPolicy",
              "path": "v1alpha/{+resource}:getIamPolicy",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}:getIamPolicy",
              "httpMethod": "GET",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                },
                "options.requestedPolicyVersion": {
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the access control policy for a secret.\nReturns empty policy if the secret exists and does not have a policy set."
            },
            "testIamPermissions": {
              "id": "secretmanager.projects.secrets.testIamPermissions",
              "path": "v1alpha/{+resource}:testIamPermissions",
              "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}:testIamPermissions",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns permissions that a caller has on the specified secret.\nIf the secret does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
            }
          }
          ,
          "resources": {
            "versions": {
              "methods": {
                "list": {
                  "id": "secretmanager.projects.secrets.versions.list",
                  "path": "v1alpha/{+parent}/versions",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/versions",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Secret associated with the\nSecretVersions to list, in the format\n`projects\/*\/secrets\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results to be returned in a single page. If\nset to 0, the server will decide the number of results to return. If the\nnumber is greater than 25000, it will be capped at 25000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional pagination token, returned earlier via\nListSecretVersionsResponse.next_page_token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSecretVersionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists SecretVersions. This does not return secret data."
                },
                "get": {
                  "id": "secretmanager.projects.secrets.versions.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SecretVersion in the format\n`projects\/*\/secrets\/*\/versions\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns metadata for a given SecretVersion."
                },
                "patch": {
                  "id": "secretmanager.projects.secrets.versions.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of the SecretVersion in the\nformat `projects\/*\/secrets\/*\/versions\/*`.\n\nSecretVersion IDs in a Secret start at 1 and\nare incremented for each subsequent version of the secret.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Specifies the fields to be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SecretVersion"
                  },
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates metadata of an existing SecretVersion.\n\nstate may be changed between\nENABLED and\nDISABLED."
                },
                "access": {
                  "id": "secretmanager.projects.secrets.versions.access",
                  "path": "v1alpha/{+name}:access",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:access",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SecretVersion in the format\n`projects\/*\/secrets\/*\/versions\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AccessSecretVersionResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Accesses an existing SecretVersion. This call returns the secret data."
                },
                "destroy": {
                  "id": "secretmanager.projects.secrets.versions.destroy",
                  "path": "v1alpha/{+name}:destroy",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:destroy",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SecretVersion to destroy\nin the format `projects\/*\/secrets\/*\/versions\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+\/versions\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DestroySecretVersionRequest"
                  },
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Destroys a SecretVersion.\n\nUpon calling this method, state will be set to\nDESTROYED,\nand the secret data will be irrevocably destroyed."
                }
              }
            },
            "latest": {
              "methods": {
                "access": {
                  "id": "secretmanager.projects.secrets.latest.access",
                  "path": "v1alpha/{+name}/latest:access",
                  "flatPath": "v1alpha/projects/{projectsId}/secrets/{secretsId}/latest:access",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the Secret in the format\n`projects\/*\/secrets\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/secrets\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AccessLatestSecretResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Accesses the latest SecretVersion for a given Secret. This call\nreturns secret data."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}