$schema: "http://json-schema.org/draft-06/schema#"

title: dataproc v1beta2 BasicYarnAutoscalingConfig export schema
description: A gcloud export/import command YAML validation schema.
type: object
required:
- gracefulDecommissionTimeout
- scaleDownFactor
- scaleUpFactor
additionalProperties: false
properties:
  COMMENT:
    type: object
    description: User specified info ignored by gcloud import.
    additionalProperties: false
    properties:
      template-id:
        type: string
      region:
        type: string
      description:
        type: string
      date:
        type: string
      version:
        type: string
  UNKNOWN:
    type: array
    description: Unknown API fields that cannot be imported.
    items:
      type: string
  gracefulDecommissionTimeout:
    description: |-
      Timeout for YARN graceful decommissioning of Node Managers. Specifies the
      duration to wait for jobs to complete before forcefully removing workers
      (and potentially interrupting jobs). Only applicable to downscaling
      operations.Bounds: 0s, 1d.
    type: string
  scaleDownFactor:
    description: |-
      Fraction of average pending memory in the last cooldown period for which
      to remove workers. A scale-down factor of 1 will result in scaling down so
      that there is no available memory remaining after the update (more
      aggressive scaling). A scale-down factor of 0 disables removing workers,
      which can be beneficial for autoscaling a single job.Bounds: 0.0, 1.0.
    type: number
  scaleDownMinWorkerFraction:
    description: |-
      Minimum scale-down threshold as a fraction of total cluster size before
      scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1
      means the autoscaler must recommend at least a 2 worker scale-down for the
      cluster to scale. A threshold of 0 means the autoscaler will scale down on
      any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
    type: number
  scaleUpFactor:
    description: |-
      Fraction of average pending memory in the last cooldown period for which
      to add workers. A scale-up factor of 1.0 will result in scaling up so that
      there is no pending memory remaining after the update (more aggressive
      scaling). A scale-up factor closer to 0 will result in a smaller magnitude
      of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.
    type: number
  scaleUpMinWorkerFraction:
    description: |-
      Minimum scale-up threshold as a fraction of total cluster size before
      scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1
      means the autoscaler must recommend at least a 2-worker scale-up for the
      cluster to scale. A threshold of 0 means the autoscaler will scale up on
      any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
    type: number
