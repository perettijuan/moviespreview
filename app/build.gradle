apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jpp.moviespreview"
        minSdkVersion 15
        targetSdkVersion 28
        vectorDrawables.useSupportLibrary = true
        versionCode 6
        versionName "1.3.2"
        buildConfigField 'String', 'API_KEY', '"eddf6980a6d7dadd72386f55f94ab571"'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions{
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin standard libs
    implementation deps.kotlin.stdlib

    // Kotlin coroutines
    def kotlinCoroutines = '0.27.0-eap13'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"

    // appCompat libraries
    def appCompatVersion = "1.0.2"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"

    // ConstraintLayout
    def constraintLayoutVersion = '1.1.3'
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.constraintlayout:constraintlayout-solver:$constraintLayoutVersion"

    // Navigation Components
    def navigationVersion = "1.0.0-alpha07"
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"

    // Paging library
    implementation deps.androidx.paging

    // Dagger
    def daggerVersion = '2.15'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    // image loading library Picasso
    implementation "com.squareup.picasso:picasso:2.5.2"


    implementation project(path: ':domainlayer')
    implementation project(path: ':datalayer')
    implementation project(path: ':common')

    testImplementation deps.test.junit5.jupiter.api         // <-- allows running JUnit5 tests
    testImplementation deps.test.junit5.jupiter.params      // <-- allows running JUnit5 parameterized tests
    testRuntimeOnly deps.test.junit5.jupiter.engine         // <-- allows running JUnit5 tests
    testImplementation deps.test.mockk
}


afterEvaluate {
    project.tasks.withType(Test).forEach { t ->
        t.useJUnitPlatform()    // <-- specify to gradle that we want to run tests on JUnit5 platform
    }
}

